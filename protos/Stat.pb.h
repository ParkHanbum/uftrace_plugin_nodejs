// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Stat.proto

#ifndef PROTOBUF_INCLUDED_Stat_2eproto
#define PROTOBUF_INCLUDED_Stat_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
#include "ThreadDump.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Stat_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Stat_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Stat_2eproto();
namespace v1 {
class PActiveTrace;
class PActiveTraceDefaultTypeInternal;
extern PActiveTraceDefaultTypeInternal _PActiveTrace_default_instance_;
class PActiveTraceHistogram;
class PActiveTraceHistogramDefaultTypeInternal;
extern PActiveTraceHistogramDefaultTypeInternal _PActiveTraceHistogram_default_instance_;
class PAgentInfo;
class PAgentInfoDefaultTypeInternal;
extern PAgentInfoDefaultTypeInternal _PAgentInfo_default_instance_;
class PAgentStat;
class PAgentStatDefaultTypeInternal;
extern PAgentStatDefaultTypeInternal _PAgentStat_default_instance_;
class PAgentStatBatch;
class PAgentStatBatchDefaultTypeInternal;
extern PAgentStatBatchDefaultTypeInternal _PAgentStatBatch_default_instance_;
class PCpuLoad;
class PCpuLoadDefaultTypeInternal;
extern PCpuLoadDefaultTypeInternal _PCpuLoad_default_instance_;
class PDataSource;
class PDataSourceDefaultTypeInternal;
extern PDataSourceDefaultTypeInternal _PDataSource_default_instance_;
class PDataSourceList;
class PDataSourceListDefaultTypeInternal;
extern PDataSourceListDefaultTypeInternal _PDataSourceList_default_instance_;
class PDeadlock;
class PDeadlockDefaultTypeInternal;
extern PDeadlockDefaultTypeInternal _PDeadlock_default_instance_;
class PDirectBuffer;
class PDirectBufferDefaultTypeInternal;
extern PDirectBufferDefaultTypeInternal _PDirectBuffer_default_instance_;
class PFileDescriptor;
class PFileDescriptorDefaultTypeInternal;
extern PFileDescriptorDefaultTypeInternal _PFileDescriptor_default_instance_;
class PJvmGc;
class PJvmGcDefaultTypeInternal;
extern PJvmGcDefaultTypeInternal _PJvmGc_default_instance_;
class PJvmGcDetailed;
class PJvmGcDetailedDefaultTypeInternal;
extern PJvmGcDetailedDefaultTypeInternal _PJvmGcDetailed_default_instance_;
class PJvmInfo;
class PJvmInfoDefaultTypeInternal;
extern PJvmInfoDefaultTypeInternal _PJvmInfo_default_instance_;
class PPing;
class PPingDefaultTypeInternal;
extern PPingDefaultTypeInternal _PPing_default_instance_;
class PResponseTime;
class PResponseTimeDefaultTypeInternal;
extern PResponseTimeDefaultTypeInternal _PResponseTime_default_instance_;
class PServerMetaData;
class PServerMetaDataDefaultTypeInternal;
extern PServerMetaDataDefaultTypeInternal _PServerMetaData_default_instance_;
class PServiceInfo;
class PServiceInfoDefaultTypeInternal;
extern PServiceInfoDefaultTypeInternal _PServiceInfo_default_instance_;
class PStatMessage;
class PStatMessageDefaultTypeInternal;
extern PStatMessageDefaultTypeInternal _PStatMessage_default_instance_;
class PTransaction;
class PTransactionDefaultTypeInternal;
extern PTransactionDefaultTypeInternal _PTransaction_default_instance_;
}  // namespace v1
namespace google {
namespace protobuf {
template<> ::v1::PActiveTrace* Arena::CreateMaybeMessage<::v1::PActiveTrace>(Arena*);
template<> ::v1::PActiveTraceHistogram* Arena::CreateMaybeMessage<::v1::PActiveTraceHistogram>(Arena*);
template<> ::v1::PAgentInfo* Arena::CreateMaybeMessage<::v1::PAgentInfo>(Arena*);
template<> ::v1::PAgentStat* Arena::CreateMaybeMessage<::v1::PAgentStat>(Arena*);
template<> ::v1::PAgentStatBatch* Arena::CreateMaybeMessage<::v1::PAgentStatBatch>(Arena*);
template<> ::v1::PCpuLoad* Arena::CreateMaybeMessage<::v1::PCpuLoad>(Arena*);
template<> ::v1::PDataSource* Arena::CreateMaybeMessage<::v1::PDataSource>(Arena*);
template<> ::v1::PDataSourceList* Arena::CreateMaybeMessage<::v1::PDataSourceList>(Arena*);
template<> ::v1::PDeadlock* Arena::CreateMaybeMessage<::v1::PDeadlock>(Arena*);
template<> ::v1::PDirectBuffer* Arena::CreateMaybeMessage<::v1::PDirectBuffer>(Arena*);
template<> ::v1::PFileDescriptor* Arena::CreateMaybeMessage<::v1::PFileDescriptor>(Arena*);
template<> ::v1::PJvmGc* Arena::CreateMaybeMessage<::v1::PJvmGc>(Arena*);
template<> ::v1::PJvmGcDetailed* Arena::CreateMaybeMessage<::v1::PJvmGcDetailed>(Arena*);
template<> ::v1::PJvmInfo* Arena::CreateMaybeMessage<::v1::PJvmInfo>(Arena*);
template<> ::v1::PPing* Arena::CreateMaybeMessage<::v1::PPing>(Arena*);
template<> ::v1::PResponseTime* Arena::CreateMaybeMessage<::v1::PResponseTime>(Arena*);
template<> ::v1::PServerMetaData* Arena::CreateMaybeMessage<::v1::PServerMetaData>(Arena*);
template<> ::v1::PServiceInfo* Arena::CreateMaybeMessage<::v1::PServiceInfo>(Arena*);
template<> ::v1::PStatMessage* Arena::CreateMaybeMessage<::v1::PStatMessage>(Arena*);
template<> ::v1::PTransaction* Arena::CreateMaybeMessage<::v1::PTransaction>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace v1 {

enum PJvmGcType {
  JVM_GC_TYPE_UNKNOWN = 0,
  JVM_GC_TYPE_SERIAL = 1,
  JVM_GC_TYPE_PARALLEL = 2,
  JVM_GC_TYPE_CMS = 3,
  JVM_GC_TYPE_G1 = 4,
  PJvmGcType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  PJvmGcType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool PJvmGcType_IsValid(int value);
const PJvmGcType PJvmGcType_MIN = JVM_GC_TYPE_UNKNOWN;
const PJvmGcType PJvmGcType_MAX = JVM_GC_TYPE_G1;
const int PJvmGcType_ARRAYSIZE = PJvmGcType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PJvmGcType_descriptor();
inline const ::std::string& PJvmGcType_Name(PJvmGcType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PJvmGcType_descriptor(), value);
}
inline bool PJvmGcType_Parse(
    const ::std::string& name, PJvmGcType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PJvmGcType>(
    PJvmGcType_descriptor(), name, value);
}
// ===================================================================

class PPing final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PPing) */ {
 public:
  PPing();
  virtual ~PPing();

  PPing(const PPing& from);

  inline PPing& operator=(const PPing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPing(PPing&& from) noexcept
    : PPing() {
    *this = ::std::move(from);
  }

  inline PPing& operator=(PPing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PPing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPing* internal_default_instance() {
    return reinterpret_cast<const PPing*>(
               &_PPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PPing* other);
  friend void swap(PPing& a, PPing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPing* New() const final {
    return CreateMaybeMessage<PPing>(nullptr);
  }

  PPing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PPing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PPing& from);
  void MergeFrom(const PPing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:v1.PPing)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PStatMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PStatMessage) */ {
 public:
  PStatMessage();
  virtual ~PStatMessage();

  PStatMessage(const PStatMessage& from);

  inline PStatMessage& operator=(const PStatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PStatMessage(PStatMessage&& from) noexcept
    : PStatMessage() {
    *this = ::std::move(from);
  }

  inline PStatMessage& operator=(PStatMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PStatMessage& default_instance();

  enum FieldCase {
    kAgentStat = 1,
    kAgentStatBatch = 2,
    FIELD_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PStatMessage* internal_default_instance() {
    return reinterpret_cast<const PStatMessage*>(
               &_PStatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PStatMessage* other);
  friend void swap(PStatMessage& a, PStatMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PStatMessage* New() const final {
    return CreateMaybeMessage<PStatMessage>(nullptr);
  }

  PStatMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PStatMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PStatMessage& from);
  void MergeFrom(const PStatMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PStatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .v1.PAgentStat agentStat = 1;
  bool has_agentstat() const;
  void clear_agentstat();
  static const int kAgentStatFieldNumber = 1;
  const ::v1::PAgentStat& agentstat() const;
  ::v1::PAgentStat* release_agentstat();
  ::v1::PAgentStat* mutable_agentstat();
  void set_allocated_agentstat(::v1::PAgentStat* agentstat);

  // .v1.PAgentStatBatch agentStatBatch = 2;
  bool has_agentstatbatch() const;
  void clear_agentstatbatch();
  static const int kAgentStatBatchFieldNumber = 2;
  const ::v1::PAgentStatBatch& agentstatbatch() const;
  ::v1::PAgentStatBatch* release_agentstatbatch();
  ::v1::PAgentStatBatch* mutable_agentstatbatch();
  void set_allocated_agentstatbatch(::v1::PAgentStatBatch* agentstatbatch);

  void clear_field();
  FieldCase field_case() const;
  // @@protoc_insertion_point(class_scope:v1.PStatMessage)
 private:
  class HasBitSetters;
  void set_has_agentstat();
  void set_has_agentstatbatch();

  inline bool has_field() const;
  inline void clear_has_field();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union FieldUnion {
    FieldUnion() {}
    ::v1::PAgentStat* agentstat_;
    ::v1::PAgentStatBatch* agentstatbatch_;
  } field_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PAgentInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PAgentInfo) */ {
 public:
  PAgentInfo();
  virtual ~PAgentInfo();

  PAgentInfo(const PAgentInfo& from);

  inline PAgentInfo& operator=(const PAgentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PAgentInfo(PAgentInfo&& from) noexcept
    : PAgentInfo() {
    *this = ::std::move(from);
  }

  inline PAgentInfo& operator=(PAgentInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PAgentInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAgentInfo* internal_default_instance() {
    return reinterpret_cast<const PAgentInfo*>(
               &_PAgentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PAgentInfo* other);
  friend void swap(PAgentInfo& a, PAgentInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PAgentInfo* New() const final {
    return CreateMaybeMessage<PAgentInfo>(nullptr);
  }

  PAgentInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PAgentInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PAgentInfo& from);
  void MergeFrom(const PAgentInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAgentInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hostname = 1;
  void clear_hostname();
  static const int kHostnameFieldNumber = 1;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string ports = 3;
  void clear_ports();
  static const int kPortsFieldNumber = 3;
  const ::std::string& ports() const;
  void set_ports(const ::std::string& value);
  #if LANG_CXX11
  void set_ports(::std::string&& value);
  #endif
  void set_ports(const char* value);
  void set_ports(const char* value, size_t size);
  ::std::string* mutable_ports();
  ::std::string* release_ports();
  void set_allocated_ports(::std::string* ports);

  // string agentVersion = 6;
  void clear_agentversion();
  static const int kAgentVersionFieldNumber = 6;
  const ::std::string& agentversion() const;
  void set_agentversion(const ::std::string& value);
  #if LANG_CXX11
  void set_agentversion(::std::string&& value);
  #endif
  void set_agentversion(const char* value);
  void set_agentversion(const char* value, size_t size);
  ::std::string* mutable_agentversion();
  ::std::string* release_agentversion();
  void set_allocated_agentversion(::std::string* agentversion);

  // string vmVersion = 7;
  void clear_vmversion();
  static const int kVmVersionFieldNumber = 7;
  const ::std::string& vmversion() const;
  void set_vmversion(const ::std::string& value);
  #if LANG_CXX11
  void set_vmversion(::std::string&& value);
  #endif
  void set_vmversion(const char* value);
  void set_vmversion(const char* value, size_t size);
  ::std::string* mutable_vmversion();
  ::std::string* release_vmversion();
  void set_allocated_vmversion(::std::string* vmversion);

  // .v1.PServerMetaData serverMetaData = 10;
  bool has_servermetadata() const;
  void clear_servermetadata();
  static const int kServerMetaDataFieldNumber = 10;
  const ::v1::PServerMetaData& servermetadata() const;
  ::v1::PServerMetaData* release_servermetadata();
  ::v1::PServerMetaData* mutable_servermetadata();
  void set_allocated_servermetadata(::v1::PServerMetaData* servermetadata);

  // .v1.PJvmInfo jvmInfo = 11;
  bool has_jvminfo() const;
  void clear_jvminfo();
  static const int kJvmInfoFieldNumber = 11;
  const ::v1::PJvmInfo& jvminfo() const;
  ::v1::PJvmInfo* release_jvminfo();
  ::v1::PJvmInfo* mutable_jvminfo();
  void set_allocated_jvminfo(::v1::PJvmInfo* jvminfo);

  // int32 serviceType = 4;
  void clear_servicetype();
  static const int kServiceTypeFieldNumber = 4;
  ::google::protobuf::int32 servicetype() const;
  void set_servicetype(::google::protobuf::int32 value);

  // int32 pid = 5;
  void clear_pid();
  static const int kPidFieldNumber = 5;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // int64 endTimestamp = 8;
  void clear_endtimestamp();
  static const int kEndTimestampFieldNumber = 8;
  ::google::protobuf::int64 endtimestamp() const;
  void set_endtimestamp(::google::protobuf::int64 value);

  // int32 endStatus = 9;
  void clear_endstatus();
  static const int kEndStatusFieldNumber = 9;
  ::google::protobuf::int32 endstatus() const;
  void set_endstatus(::google::protobuf::int32 value);

  // bool container = 12;
  void clear_container();
  static const int kContainerFieldNumber = 12;
  bool container() const;
  void set_container(bool value);

  // @@protoc_insertion_point(class_scope:v1.PAgentInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ports_;
  ::google::protobuf::internal::ArenaStringPtr agentversion_;
  ::google::protobuf::internal::ArenaStringPtr vmversion_;
  ::v1::PServerMetaData* servermetadata_;
  ::v1::PJvmInfo* jvminfo_;
  ::google::protobuf::int32 servicetype_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int64 endtimestamp_;
  ::google::protobuf::int32 endstatus_;
  bool container_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PServerMetaData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PServerMetaData) */ {
 public:
  PServerMetaData();
  virtual ~PServerMetaData();

  PServerMetaData(const PServerMetaData& from);

  inline PServerMetaData& operator=(const PServerMetaData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PServerMetaData(PServerMetaData&& from) noexcept
    : PServerMetaData() {
    *this = ::std::move(from);
  }

  inline PServerMetaData& operator=(PServerMetaData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PServerMetaData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PServerMetaData* internal_default_instance() {
    return reinterpret_cast<const PServerMetaData*>(
               &_PServerMetaData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PServerMetaData* other);
  friend void swap(PServerMetaData& a, PServerMetaData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PServerMetaData* New() const final {
    return CreateMaybeMessage<PServerMetaData>(nullptr);
  }

  PServerMetaData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PServerMetaData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PServerMetaData& from);
  void MergeFrom(const PServerMetaData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PServerMetaData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string vmArg = 2;
  int vmarg_size() const;
  void clear_vmarg();
  static const int kVmArgFieldNumber = 2;
  const ::std::string& vmarg(int index) const;
  ::std::string* mutable_vmarg(int index);
  void set_vmarg(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_vmarg(int index, ::std::string&& value);
  #endif
  void set_vmarg(int index, const char* value);
  void set_vmarg(int index, const char* value, size_t size);
  ::std::string* add_vmarg();
  void add_vmarg(const ::std::string& value);
  #if LANG_CXX11
  void add_vmarg(::std::string&& value);
  #endif
  void add_vmarg(const char* value);
  void add_vmarg(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& vmarg() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_vmarg();

  // repeated .v1.PServiceInfo serviceInfo = 3;
  int serviceinfo_size() const;
  void clear_serviceinfo();
  static const int kServiceInfoFieldNumber = 3;
  ::v1::PServiceInfo* mutable_serviceinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::v1::PServiceInfo >*
      mutable_serviceinfo();
  const ::v1::PServiceInfo& serviceinfo(int index) const;
  ::v1::PServiceInfo* add_serviceinfo();
  const ::google::protobuf::RepeatedPtrField< ::v1::PServiceInfo >&
      serviceinfo() const;

  // string serverInfo = 1;
  void clear_serverinfo();
  static const int kServerInfoFieldNumber = 1;
  const ::std::string& serverinfo() const;
  void set_serverinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_serverinfo(::std::string&& value);
  #endif
  void set_serverinfo(const char* value);
  void set_serverinfo(const char* value, size_t size);
  ::std::string* mutable_serverinfo();
  ::std::string* release_serverinfo();
  void set_allocated_serverinfo(::std::string* serverinfo);

  // @@protoc_insertion_point(class_scope:v1.PServerMetaData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> vmarg_;
  ::google::protobuf::RepeatedPtrField< ::v1::PServiceInfo > serviceinfo_;
  ::google::protobuf::internal::ArenaStringPtr serverinfo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PServiceInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PServiceInfo) */ {
 public:
  PServiceInfo();
  virtual ~PServiceInfo();

  PServiceInfo(const PServiceInfo& from);

  inline PServiceInfo& operator=(const PServiceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PServiceInfo(PServiceInfo&& from) noexcept
    : PServiceInfo() {
    *this = ::std::move(from);
  }

  inline PServiceInfo& operator=(PServiceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PServiceInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PServiceInfo* internal_default_instance() {
    return reinterpret_cast<const PServiceInfo*>(
               &_PServiceInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PServiceInfo* other);
  friend void swap(PServiceInfo& a, PServiceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PServiceInfo* New() const final {
    return CreateMaybeMessage<PServiceInfo>(nullptr);
  }

  PServiceInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PServiceInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PServiceInfo& from);
  void MergeFrom(const PServiceInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PServiceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string serviceLib = 2;
  int servicelib_size() const;
  void clear_servicelib();
  static const int kServiceLibFieldNumber = 2;
  const ::std::string& servicelib(int index) const;
  ::std::string* mutable_servicelib(int index);
  void set_servicelib(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_servicelib(int index, ::std::string&& value);
  #endif
  void set_servicelib(int index, const char* value);
  void set_servicelib(int index, const char* value, size_t size);
  ::std::string* add_servicelib();
  void add_servicelib(const ::std::string& value);
  #if LANG_CXX11
  void add_servicelib(::std::string&& value);
  #endif
  void add_servicelib(const char* value);
  void add_servicelib(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& servicelib() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_servicelib();

  // string serviceName = 1;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  #if LANG_CXX11
  void set_servicename(::std::string&& value);
  #endif
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // @@protoc_insertion_point(class_scope:v1.PServiceInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> servicelib_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PJvmInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PJvmInfo) */ {
 public:
  PJvmInfo();
  virtual ~PJvmInfo();

  PJvmInfo(const PJvmInfo& from);

  inline PJvmInfo& operator=(const PJvmInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PJvmInfo(PJvmInfo&& from) noexcept
    : PJvmInfo() {
    *this = ::std::move(from);
  }

  inline PJvmInfo& operator=(PJvmInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PJvmInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PJvmInfo* internal_default_instance() {
    return reinterpret_cast<const PJvmInfo*>(
               &_PJvmInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PJvmInfo* other);
  friend void swap(PJvmInfo& a, PJvmInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PJvmInfo* New() const final {
    return CreateMaybeMessage<PJvmInfo>(nullptr);
  }

  PJvmInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PJvmInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PJvmInfo& from);
  void MergeFrom(const PJvmInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PJvmInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vmVersion = 2;
  void clear_vmversion();
  static const int kVmVersionFieldNumber = 2;
  const ::std::string& vmversion() const;
  void set_vmversion(const ::std::string& value);
  #if LANG_CXX11
  void set_vmversion(::std::string&& value);
  #endif
  void set_vmversion(const char* value);
  void set_vmversion(const char* value, size_t size);
  ::std::string* mutable_vmversion();
  ::std::string* release_vmversion();
  void set_allocated_vmversion(::std::string* vmversion);

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // .v1.PJvmGcType gcType = 3;
  void clear_gctype();
  static const int kGcTypeFieldNumber = 3;
  ::v1::PJvmGcType gctype() const;
  void set_gctype(::v1::PJvmGcType value);

  // @@protoc_insertion_point(class_scope:v1.PJvmInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vmversion_;
  ::google::protobuf::int32 version_;
  int gctype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PAgentStat final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PAgentStat) */ {
 public:
  PAgentStat();
  virtual ~PAgentStat();

  PAgentStat(const PAgentStat& from);

  inline PAgentStat& operator=(const PAgentStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PAgentStat(PAgentStat&& from) noexcept
    : PAgentStat() {
    *this = ::std::move(from);
  }

  inline PAgentStat& operator=(PAgentStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PAgentStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAgentStat* internal_default_instance() {
    return reinterpret_cast<const PAgentStat*>(
               &_PAgentStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PAgentStat* other);
  friend void swap(PAgentStat& a, PAgentStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PAgentStat* New() const final {
    return CreateMaybeMessage<PAgentStat>(nullptr);
  }

  PAgentStat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PAgentStat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PAgentStat& from);
  void MergeFrom(const PAgentStat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAgentStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string metadata = 12;
  void clear_metadata();
  static const int kMetadataFieldNumber = 12;
  const ::std::string& metadata() const;
  void set_metadata(const ::std::string& value);
  #if LANG_CXX11
  void set_metadata(::std::string&& value);
  #endif
  void set_metadata(const char* value);
  void set_metadata(const char* value, size_t size);
  ::std::string* mutable_metadata();
  ::std::string* release_metadata();
  void set_allocated_metadata(::std::string* metadata);

  // .v1.PJvmGc gc = 3;
  bool has_gc() const;
  void clear_gc();
  static const int kGcFieldNumber = 3;
  const ::v1::PJvmGc& gc() const;
  ::v1::PJvmGc* release_gc();
  ::v1::PJvmGc* mutable_gc();
  void set_allocated_gc(::v1::PJvmGc* gc);

  // .v1.PCpuLoad cpuLoad = 4;
  bool has_cpuload() const;
  void clear_cpuload();
  static const int kCpuLoadFieldNumber = 4;
  const ::v1::PCpuLoad& cpuload() const;
  ::v1::PCpuLoad* release_cpuload();
  ::v1::PCpuLoad* mutable_cpuload();
  void set_allocated_cpuload(::v1::PCpuLoad* cpuload);

  // .v1.PTransaction transaction = 5;
  bool has_transaction() const;
  void clear_transaction();
  static const int kTransactionFieldNumber = 5;
  const ::v1::PTransaction& transaction() const;
  ::v1::PTransaction* release_transaction();
  ::v1::PTransaction* mutable_transaction();
  void set_allocated_transaction(::v1::PTransaction* transaction);

  // .v1.PActiveTrace activeTrace = 6;
  bool has_activetrace() const;
  void clear_activetrace();
  static const int kActiveTraceFieldNumber = 6;
  const ::v1::PActiveTrace& activetrace() const;
  ::v1::PActiveTrace* release_activetrace();
  ::v1::PActiveTrace* mutable_activetrace();
  void set_allocated_activetrace(::v1::PActiveTrace* activetrace);

  // .v1.PDataSourceList dataSourceList = 7;
  bool has_datasourcelist() const;
  void clear_datasourcelist();
  static const int kDataSourceListFieldNumber = 7;
  const ::v1::PDataSourceList& datasourcelist() const;
  ::v1::PDataSourceList* release_datasourcelist();
  ::v1::PDataSourceList* mutable_datasourcelist();
  void set_allocated_datasourcelist(::v1::PDataSourceList* datasourcelist);

  // .v1.PResponseTime responseTime = 8;
  bool has_responsetime() const;
  void clear_responsetime();
  static const int kResponseTimeFieldNumber = 8;
  const ::v1::PResponseTime& responsetime() const;
  ::v1::PResponseTime* release_responsetime();
  ::v1::PResponseTime* mutable_responsetime();
  void set_allocated_responsetime(::v1::PResponseTime* responsetime);

  // .v1.PDeadlock deadlock = 9;
  bool has_deadlock() const;
  void clear_deadlock();
  static const int kDeadlockFieldNumber = 9;
  const ::v1::PDeadlock& deadlock() const;
  ::v1::PDeadlock* release_deadlock();
  ::v1::PDeadlock* mutable_deadlock();
  void set_allocated_deadlock(::v1::PDeadlock* deadlock);

  // .v1.PFileDescriptor fileDescriptor = 10;
  bool has_filedescriptor() const;
  void clear_filedescriptor();
  static const int kFileDescriptorFieldNumber = 10;
  const ::v1::PFileDescriptor& filedescriptor() const;
  ::v1::PFileDescriptor* release_filedescriptor();
  ::v1::PFileDescriptor* mutable_filedescriptor();
  void set_allocated_filedescriptor(::v1::PFileDescriptor* filedescriptor);

  // .v1.PDirectBuffer directBuffer = 11;
  bool has_directbuffer() const;
  void clear_directbuffer();
  static const int kDirectBufferFieldNumber = 11;
  const ::v1::PDirectBuffer& directbuffer() const;
  ::v1::PDirectBuffer* release_directbuffer();
  ::v1::PDirectBuffer* mutable_directbuffer();
  void set_allocated_directbuffer(::v1::PDirectBuffer* directbuffer);

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int64 collectInterval = 2;
  void clear_collectinterval();
  static const int kCollectIntervalFieldNumber = 2;
  ::google::protobuf::int64 collectinterval() const;
  void set_collectinterval(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:v1.PAgentStat)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr metadata_;
  ::v1::PJvmGc* gc_;
  ::v1::PCpuLoad* cpuload_;
  ::v1::PTransaction* transaction_;
  ::v1::PActiveTrace* activetrace_;
  ::v1::PDataSourceList* datasourcelist_;
  ::v1::PResponseTime* responsetime_;
  ::v1::PDeadlock* deadlock_;
  ::v1::PFileDescriptor* filedescriptor_;
  ::v1::PDirectBuffer* directbuffer_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int64 collectinterval_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PAgentStatBatch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PAgentStatBatch) */ {
 public:
  PAgentStatBatch();
  virtual ~PAgentStatBatch();

  PAgentStatBatch(const PAgentStatBatch& from);

  inline PAgentStatBatch& operator=(const PAgentStatBatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PAgentStatBatch(PAgentStatBatch&& from) noexcept
    : PAgentStatBatch() {
    *this = ::std::move(from);
  }

  inline PAgentStatBatch& operator=(PAgentStatBatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PAgentStatBatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PAgentStatBatch* internal_default_instance() {
    return reinterpret_cast<const PAgentStatBatch*>(
               &_PAgentStatBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PAgentStatBatch* other);
  friend void swap(PAgentStatBatch& a, PAgentStatBatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PAgentStatBatch* New() const final {
    return CreateMaybeMessage<PAgentStatBatch>(nullptr);
  }

  PAgentStatBatch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PAgentStatBatch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PAgentStatBatch& from);
  void MergeFrom(const PAgentStatBatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAgentStatBatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .v1.PAgentStat agentStat = 1;
  int agentstat_size() const;
  void clear_agentstat();
  static const int kAgentStatFieldNumber = 1;
  ::v1::PAgentStat* mutable_agentstat(int index);
  ::google::protobuf::RepeatedPtrField< ::v1::PAgentStat >*
      mutable_agentstat();
  const ::v1::PAgentStat& agentstat(int index) const;
  ::v1::PAgentStat* add_agentstat();
  const ::google::protobuf::RepeatedPtrField< ::v1::PAgentStat >&
      agentstat() const;

  // @@protoc_insertion_point(class_scope:v1.PAgentStatBatch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::v1::PAgentStat > agentstat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PDataSource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PDataSource) */ {
 public:
  PDataSource();
  virtual ~PDataSource();

  PDataSource(const PDataSource& from);

  inline PDataSource& operator=(const PDataSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PDataSource(PDataSource&& from) noexcept
    : PDataSource() {
    *this = ::std::move(from);
  }

  inline PDataSource& operator=(PDataSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PDataSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PDataSource* internal_default_instance() {
    return reinterpret_cast<const PDataSource*>(
               &_PDataSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PDataSource* other);
  friend void swap(PDataSource& a, PDataSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PDataSource* New() const final {
    return CreateMaybeMessage<PDataSource>(nullptr);
  }

  PDataSource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PDataSource>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PDataSource& from);
  void MergeFrom(const PDataSource& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PDataSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string databaseName = 3;
  void clear_databasename();
  static const int kDatabaseNameFieldNumber = 3;
  const ::std::string& databasename() const;
  void set_databasename(const ::std::string& value);
  #if LANG_CXX11
  void set_databasename(::std::string&& value);
  #endif
  void set_databasename(const char* value);
  void set_databasename(const char* value, size_t size);
  ::std::string* mutable_databasename();
  ::std::string* release_databasename();
  void set_allocated_databasename(::std::string* databasename);

  // string url = 4;
  void clear_url();
  static const int kUrlFieldNumber = 4;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 serviceTypeCode = 2;
  void clear_servicetypecode();
  static const int kServiceTypeCodeFieldNumber = 2;
  ::google::protobuf::int32 servicetypecode() const;
  void set_servicetypecode(::google::protobuf::int32 value);

  // int32 activeConnectionSize = 5;
  void clear_activeconnectionsize();
  static const int kActiveConnectionSizeFieldNumber = 5;
  ::google::protobuf::int32 activeconnectionsize() const;
  void set_activeconnectionsize(::google::protobuf::int32 value);

  // int32 maxConnectionSize = 6;
  void clear_maxconnectionsize();
  static const int kMaxConnectionSizeFieldNumber = 6;
  ::google::protobuf::int32 maxconnectionsize() const;
  void set_maxconnectionsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:v1.PDataSource)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr databasename_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 servicetypecode_;
  ::google::protobuf::int32 activeconnectionsize_;
  ::google::protobuf::int32 maxconnectionsize_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PDataSourceList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PDataSourceList) */ {
 public:
  PDataSourceList();
  virtual ~PDataSourceList();

  PDataSourceList(const PDataSourceList& from);

  inline PDataSourceList& operator=(const PDataSourceList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PDataSourceList(PDataSourceList&& from) noexcept
    : PDataSourceList() {
    *this = ::std::move(from);
  }

  inline PDataSourceList& operator=(PDataSourceList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PDataSourceList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PDataSourceList* internal_default_instance() {
    return reinterpret_cast<const PDataSourceList*>(
               &_PDataSourceList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PDataSourceList* other);
  friend void swap(PDataSourceList& a, PDataSourceList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PDataSourceList* New() const final {
    return CreateMaybeMessage<PDataSourceList>(nullptr);
  }

  PDataSourceList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PDataSourceList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PDataSourceList& from);
  void MergeFrom(const PDataSourceList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PDataSourceList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .v1.PDataSource dataSource = 1;
  int datasource_size() const;
  void clear_datasource();
  static const int kDataSourceFieldNumber = 1;
  ::v1::PDataSource* mutable_datasource(int index);
  ::google::protobuf::RepeatedPtrField< ::v1::PDataSource >*
      mutable_datasource();
  const ::v1::PDataSource& datasource(int index) const;
  ::v1::PDataSource* add_datasource();
  const ::google::protobuf::RepeatedPtrField< ::v1::PDataSource >&
      datasource() const;

  // @@protoc_insertion_point(class_scope:v1.PDataSourceList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::v1::PDataSource > datasource_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PFileDescriptor final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PFileDescriptor) */ {
 public:
  PFileDescriptor();
  virtual ~PFileDescriptor();

  PFileDescriptor(const PFileDescriptor& from);

  inline PFileDescriptor& operator=(const PFileDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PFileDescriptor(PFileDescriptor&& from) noexcept
    : PFileDescriptor() {
    *this = ::std::move(from);
  }

  inline PFileDescriptor& operator=(PFileDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PFileDescriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PFileDescriptor* internal_default_instance() {
    return reinterpret_cast<const PFileDescriptor*>(
               &_PFileDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PFileDescriptor* other);
  friend void swap(PFileDescriptor& a, PFileDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PFileDescriptor* New() const final {
    return CreateMaybeMessage<PFileDescriptor>(nullptr);
  }

  PFileDescriptor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PFileDescriptor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PFileDescriptor& from);
  void MergeFrom(const PFileDescriptor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PFileDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 openFileDescriptorCount = 1;
  void clear_openfiledescriptorcount();
  static const int kOpenFileDescriptorCountFieldNumber = 1;
  ::google::protobuf::int64 openfiledescriptorcount() const;
  void set_openfiledescriptorcount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:v1.PFileDescriptor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 openfiledescriptorcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PJvmGc final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PJvmGc) */ {
 public:
  PJvmGc();
  virtual ~PJvmGc();

  PJvmGc(const PJvmGc& from);

  inline PJvmGc& operator=(const PJvmGc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PJvmGc(PJvmGc&& from) noexcept
    : PJvmGc() {
    *this = ::std::move(from);
  }

  inline PJvmGc& operator=(PJvmGc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PJvmGc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PJvmGc* internal_default_instance() {
    return reinterpret_cast<const PJvmGc*>(
               &_PJvmGc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PJvmGc* other);
  friend void swap(PJvmGc& a, PJvmGc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PJvmGc* New() const final {
    return CreateMaybeMessage<PJvmGc>(nullptr);
  }

  PJvmGc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PJvmGc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PJvmGc& from);
  void MergeFrom(const PJvmGc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PJvmGc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .v1.PJvmGcDetailed jvmGcDetailed = 8;
  bool has_jvmgcdetailed() const;
  void clear_jvmgcdetailed();
  static const int kJvmGcDetailedFieldNumber = 8;
  const ::v1::PJvmGcDetailed& jvmgcdetailed() const;
  ::v1::PJvmGcDetailed* release_jvmgcdetailed();
  ::v1::PJvmGcDetailed* mutable_jvmgcdetailed();
  void set_allocated_jvmgcdetailed(::v1::PJvmGcDetailed* jvmgcdetailed);

  // int64 jvmMemoryHeapUsed = 2;
  void clear_jvmmemoryheapused();
  static const int kJvmMemoryHeapUsedFieldNumber = 2;
  ::google::protobuf::int64 jvmmemoryheapused() const;
  void set_jvmmemoryheapused(::google::protobuf::int64 value);

  // int64 jvmMemoryHeapMax = 3;
  void clear_jvmmemoryheapmax();
  static const int kJvmMemoryHeapMaxFieldNumber = 3;
  ::google::protobuf::int64 jvmmemoryheapmax() const;
  void set_jvmmemoryheapmax(::google::protobuf::int64 value);

  // int64 jvmMemoryNonHeapUsed = 4;
  void clear_jvmmemorynonheapused();
  static const int kJvmMemoryNonHeapUsedFieldNumber = 4;
  ::google::protobuf::int64 jvmmemorynonheapused() const;
  void set_jvmmemorynonheapused(::google::protobuf::int64 value);

  // int64 jvmMemoryNonHeapMax = 5;
  void clear_jvmmemorynonheapmax();
  static const int kJvmMemoryNonHeapMaxFieldNumber = 5;
  ::google::protobuf::int64 jvmmemorynonheapmax() const;
  void set_jvmmemorynonheapmax(::google::protobuf::int64 value);

  // int64 jvmGcOldCount = 6;
  void clear_jvmgcoldcount();
  static const int kJvmGcOldCountFieldNumber = 6;
  ::google::protobuf::int64 jvmgcoldcount() const;
  void set_jvmgcoldcount(::google::protobuf::int64 value);

  // int64 jvmGcOldTime = 7;
  void clear_jvmgcoldtime();
  static const int kJvmGcOldTimeFieldNumber = 7;
  ::google::protobuf::int64 jvmgcoldtime() const;
  void set_jvmgcoldtime(::google::protobuf::int64 value);

  // .v1.PJvmGcType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::v1::PJvmGcType type() const;
  void set_type(::v1::PJvmGcType value);

  // @@protoc_insertion_point(class_scope:v1.PJvmGc)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::v1::PJvmGcDetailed* jvmgcdetailed_;
  ::google::protobuf::int64 jvmmemoryheapused_;
  ::google::protobuf::int64 jvmmemoryheapmax_;
  ::google::protobuf::int64 jvmmemorynonheapused_;
  ::google::protobuf::int64 jvmmemorynonheapmax_;
  ::google::protobuf::int64 jvmgcoldcount_;
  ::google::protobuf::int64 jvmgcoldtime_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PJvmGcDetailed final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PJvmGcDetailed) */ {
 public:
  PJvmGcDetailed();
  virtual ~PJvmGcDetailed();

  PJvmGcDetailed(const PJvmGcDetailed& from);

  inline PJvmGcDetailed& operator=(const PJvmGcDetailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PJvmGcDetailed(PJvmGcDetailed&& from) noexcept
    : PJvmGcDetailed() {
    *this = ::std::move(from);
  }

  inline PJvmGcDetailed& operator=(PJvmGcDetailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PJvmGcDetailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PJvmGcDetailed* internal_default_instance() {
    return reinterpret_cast<const PJvmGcDetailed*>(
               &_PJvmGcDetailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(PJvmGcDetailed* other);
  friend void swap(PJvmGcDetailed& a, PJvmGcDetailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PJvmGcDetailed* New() const final {
    return CreateMaybeMessage<PJvmGcDetailed>(nullptr);
  }

  PJvmGcDetailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PJvmGcDetailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PJvmGcDetailed& from);
  void MergeFrom(const PJvmGcDetailed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PJvmGcDetailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 jvmGcNewCount = 1;
  void clear_jvmgcnewcount();
  static const int kJvmGcNewCountFieldNumber = 1;
  ::google::protobuf::int64 jvmgcnewcount() const;
  void set_jvmgcnewcount(::google::protobuf::int64 value);

  // int64 jvmGcNewTime = 2;
  void clear_jvmgcnewtime();
  static const int kJvmGcNewTimeFieldNumber = 2;
  ::google::protobuf::int64 jvmgcnewtime() const;
  void set_jvmgcnewtime(::google::protobuf::int64 value);

  // double jvmPoolCodeCacheUsed = 3;
  void clear_jvmpoolcodecacheused();
  static const int kJvmPoolCodeCacheUsedFieldNumber = 3;
  double jvmpoolcodecacheused() const;
  void set_jvmpoolcodecacheused(double value);

  // double jvmPoolNewGenUsed = 4;
  void clear_jvmpoolnewgenused();
  static const int kJvmPoolNewGenUsedFieldNumber = 4;
  double jvmpoolnewgenused() const;
  void set_jvmpoolnewgenused(double value);

  // double jvmPoolOldGenUsed = 5;
  void clear_jvmpoololdgenused();
  static const int kJvmPoolOldGenUsedFieldNumber = 5;
  double jvmpoololdgenused() const;
  void set_jvmpoololdgenused(double value);

  // double jvmPoolSurvivorSpaceUsed = 6;
  void clear_jvmpoolsurvivorspaceused();
  static const int kJvmPoolSurvivorSpaceUsedFieldNumber = 6;
  double jvmpoolsurvivorspaceused() const;
  void set_jvmpoolsurvivorspaceused(double value);

  // double jvmPoolPermGenUsed = 7;
  void clear_jvmpoolpermgenused();
  static const int kJvmPoolPermGenUsedFieldNumber = 7;
  double jvmpoolpermgenused() const;
  void set_jvmpoolpermgenused(double value);

  // double jvmPoolMetaspaceUsed = 8;
  void clear_jvmpoolmetaspaceused();
  static const int kJvmPoolMetaspaceUsedFieldNumber = 8;
  double jvmpoolmetaspaceused() const;
  void set_jvmpoolmetaspaceused(double value);

  // @@protoc_insertion_point(class_scope:v1.PJvmGcDetailed)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 jvmgcnewcount_;
  ::google::protobuf::int64 jvmgcnewtime_;
  double jvmpoolcodecacheused_;
  double jvmpoolnewgenused_;
  double jvmpoololdgenused_;
  double jvmpoolsurvivorspaceused_;
  double jvmpoolpermgenused_;
  double jvmpoolmetaspaceused_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PCpuLoad final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PCpuLoad) */ {
 public:
  PCpuLoad();
  virtual ~PCpuLoad();

  PCpuLoad(const PCpuLoad& from);

  inline PCpuLoad& operator=(const PCpuLoad& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PCpuLoad(PCpuLoad&& from) noexcept
    : PCpuLoad() {
    *this = ::std::move(from);
  }

  inline PCpuLoad& operator=(PCpuLoad&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PCpuLoad& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PCpuLoad* internal_default_instance() {
    return reinterpret_cast<const PCpuLoad*>(
               &_PCpuLoad_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(PCpuLoad* other);
  friend void swap(PCpuLoad& a, PCpuLoad& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PCpuLoad* New() const final {
    return CreateMaybeMessage<PCpuLoad>(nullptr);
  }

  PCpuLoad* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PCpuLoad>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PCpuLoad& from);
  void MergeFrom(const PCpuLoad& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PCpuLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double jvmCpuLoad = 1;
  void clear_jvmcpuload();
  static const int kJvmCpuLoadFieldNumber = 1;
  double jvmcpuload() const;
  void set_jvmcpuload(double value);

  // double systemCpuLoad = 2;
  void clear_systemcpuload();
  static const int kSystemCpuLoadFieldNumber = 2;
  double systemcpuload() const;
  void set_systemcpuload(double value);

  // @@protoc_insertion_point(class_scope:v1.PCpuLoad)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double jvmcpuload_;
  double systemcpuload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PTransaction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PTransaction) */ {
 public:
  PTransaction();
  virtual ~PTransaction();

  PTransaction(const PTransaction& from);

  inline PTransaction& operator=(const PTransaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PTransaction(PTransaction&& from) noexcept
    : PTransaction() {
    *this = ::std::move(from);
  }

  inline PTransaction& operator=(PTransaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PTransaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PTransaction* internal_default_instance() {
    return reinterpret_cast<const PTransaction*>(
               &_PTransaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(PTransaction* other);
  friend void swap(PTransaction& a, PTransaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PTransaction* New() const final {
    return CreateMaybeMessage<PTransaction>(nullptr);
  }

  PTransaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PTransaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PTransaction& from);
  void MergeFrom(const PTransaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PTransaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 sampledNewCount = 2;
  void clear_samplednewcount();
  static const int kSampledNewCountFieldNumber = 2;
  ::google::protobuf::int64 samplednewcount() const;
  void set_samplednewcount(::google::protobuf::int64 value);

  // int64 sampledContinuationCount = 3;
  void clear_sampledcontinuationcount();
  static const int kSampledContinuationCountFieldNumber = 3;
  ::google::protobuf::int64 sampledcontinuationcount() const;
  void set_sampledcontinuationcount(::google::protobuf::int64 value);

  // int64 unsampledNewCount = 4;
  void clear_unsamplednewcount();
  static const int kUnsampledNewCountFieldNumber = 4;
  ::google::protobuf::int64 unsamplednewcount() const;
  void set_unsamplednewcount(::google::protobuf::int64 value);

  // int64 unsampledContinuationCount = 5;
  void clear_unsampledcontinuationcount();
  static const int kUnsampledContinuationCountFieldNumber = 5;
  ::google::protobuf::int64 unsampledcontinuationcount() const;
  void set_unsampledcontinuationcount(::google::protobuf::int64 value);

  // int64 skippedNewCount = 6;
  void clear_skippednewcount();
  static const int kSkippedNewCountFieldNumber = 6;
  ::google::protobuf::int64 skippednewcount() const;
  void set_skippednewcount(::google::protobuf::int64 value);

  // int64 skippedContinuationCount = 7;
  void clear_skippedcontinuationcount();
  static const int kSkippedContinuationCountFieldNumber = 7;
  ::google::protobuf::int64 skippedcontinuationcount() const;
  void set_skippedcontinuationcount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:v1.PTransaction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 samplednewcount_;
  ::google::protobuf::int64 sampledcontinuationcount_;
  ::google::protobuf::int64 unsamplednewcount_;
  ::google::protobuf::int64 unsampledcontinuationcount_;
  ::google::protobuf::int64 skippednewcount_;
  ::google::protobuf::int64 skippedcontinuationcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PActiveTraceHistogram final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PActiveTraceHistogram) */ {
 public:
  PActiveTraceHistogram();
  virtual ~PActiveTraceHistogram();

  PActiveTraceHistogram(const PActiveTraceHistogram& from);

  inline PActiveTraceHistogram& operator=(const PActiveTraceHistogram& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PActiveTraceHistogram(PActiveTraceHistogram&& from) noexcept
    : PActiveTraceHistogram() {
    *this = ::std::move(from);
  }

  inline PActiveTraceHistogram& operator=(PActiveTraceHistogram&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PActiveTraceHistogram& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActiveTraceHistogram* internal_default_instance() {
    return reinterpret_cast<const PActiveTraceHistogram*>(
               &_PActiveTraceHistogram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(PActiveTraceHistogram* other);
  friend void swap(PActiveTraceHistogram& a, PActiveTraceHistogram& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PActiveTraceHistogram* New() const final {
    return CreateMaybeMessage<PActiveTraceHistogram>(nullptr);
  }

  PActiveTraceHistogram* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PActiveTraceHistogram>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PActiveTraceHistogram& from);
  void MergeFrom(const PActiveTraceHistogram& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActiveTraceHistogram* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 activeTraceCount = 3;
  int activetracecount_size() const;
  void clear_activetracecount();
  static const int kActiveTraceCountFieldNumber = 3;
  ::google::protobuf::int32 activetracecount(int index) const;
  void set_activetracecount(int index, ::google::protobuf::int32 value);
  void add_activetracecount(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      activetracecount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_activetracecount();

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // int32 histogramSchemaType = 2;
  void clear_histogramschematype();
  static const int kHistogramSchemaTypeFieldNumber = 2;
  ::google::protobuf::int32 histogramschematype() const;
  void set_histogramschematype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:v1.PActiveTraceHistogram)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > activetracecount_;
  mutable std::atomic<int> _activetracecount_cached_byte_size_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 histogramschematype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PActiveTrace final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PActiveTrace) */ {
 public:
  PActiveTrace();
  virtual ~PActiveTrace();

  PActiveTrace(const PActiveTrace& from);

  inline PActiveTrace& operator=(const PActiveTrace& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PActiveTrace(PActiveTrace&& from) noexcept
    : PActiveTrace() {
    *this = ::std::move(from);
  }

  inline PActiveTrace& operator=(PActiveTrace&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PActiveTrace& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActiveTrace* internal_default_instance() {
    return reinterpret_cast<const PActiveTrace*>(
               &_PActiveTrace_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(PActiveTrace* other);
  friend void swap(PActiveTrace& a, PActiveTrace& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PActiveTrace* New() const final {
    return CreateMaybeMessage<PActiveTrace>(nullptr);
  }

  PActiveTrace* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PActiveTrace>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PActiveTrace& from);
  void MergeFrom(const PActiveTrace& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PActiveTrace* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .v1.PActiveTraceHistogram histogram = 1;
  bool has_histogram() const;
  void clear_histogram();
  static const int kHistogramFieldNumber = 1;
  const ::v1::PActiveTraceHistogram& histogram() const;
  ::v1::PActiveTraceHistogram* release_histogram();
  ::v1::PActiveTraceHistogram* mutable_histogram();
  void set_allocated_histogram(::v1::PActiveTraceHistogram* histogram);

  // @@protoc_insertion_point(class_scope:v1.PActiveTrace)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::v1::PActiveTraceHistogram* histogram_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PResponseTime final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PResponseTime) */ {
 public:
  PResponseTime();
  virtual ~PResponseTime();

  PResponseTime(const PResponseTime& from);

  inline PResponseTime& operator=(const PResponseTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PResponseTime(PResponseTime&& from) noexcept
    : PResponseTime() {
    *this = ::std::move(from);
  }

  inline PResponseTime& operator=(PResponseTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PResponseTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PResponseTime* internal_default_instance() {
    return reinterpret_cast<const PResponseTime*>(
               &_PResponseTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(PResponseTime* other);
  friend void swap(PResponseTime& a, PResponseTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PResponseTime* New() const final {
    return CreateMaybeMessage<PResponseTime>(nullptr);
  }

  PResponseTime* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PResponseTime>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PResponseTime& from);
  void MergeFrom(const PResponseTime& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PResponseTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 avg = 1;
  void clear_avg();
  static const int kAvgFieldNumber = 1;
  ::google::protobuf::int64 avg() const;
  void set_avg(::google::protobuf::int64 value);

  // int64 max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  ::google::protobuf::int64 max() const;
  void set_max(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:v1.PResponseTime)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 avg_;
  ::google::protobuf::int64 max_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PDeadlock final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PDeadlock) */ {
 public:
  PDeadlock();
  virtual ~PDeadlock();

  PDeadlock(const PDeadlock& from);

  inline PDeadlock& operator=(const PDeadlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PDeadlock(PDeadlock&& from) noexcept
    : PDeadlock() {
    *this = ::std::move(from);
  }

  inline PDeadlock& operator=(PDeadlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PDeadlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PDeadlock* internal_default_instance() {
    return reinterpret_cast<const PDeadlock*>(
               &_PDeadlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(PDeadlock* other);
  friend void swap(PDeadlock& a, PDeadlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PDeadlock* New() const final {
    return CreateMaybeMessage<PDeadlock>(nullptr);
  }

  PDeadlock* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PDeadlock>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PDeadlock& from);
  void MergeFrom(const PDeadlock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PDeadlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .v1.PThreadDump threadDump = 2;
  int threaddump_size() const;
  void clear_threaddump();
  static const int kThreadDumpFieldNumber = 2;
  ::v1::PThreadDump* mutable_threaddump(int index);
  ::google::protobuf::RepeatedPtrField< ::v1::PThreadDump >*
      mutable_threaddump();
  const ::v1::PThreadDump& threaddump(int index) const;
  ::v1::PThreadDump* add_threaddump();
  const ::google::protobuf::RepeatedPtrField< ::v1::PThreadDump >&
      threaddump() const;

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:v1.PDeadlock)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::v1::PThreadDump > threaddump_;
  ::google::protobuf::int32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// -------------------------------------------------------------------

class PDirectBuffer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v1.PDirectBuffer) */ {
 public:
  PDirectBuffer();
  virtual ~PDirectBuffer();

  PDirectBuffer(const PDirectBuffer& from);

  inline PDirectBuffer& operator=(const PDirectBuffer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PDirectBuffer(PDirectBuffer&& from) noexcept
    : PDirectBuffer() {
    *this = ::std::move(from);
  }

  inline PDirectBuffer& operator=(PDirectBuffer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PDirectBuffer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PDirectBuffer* internal_default_instance() {
    return reinterpret_cast<const PDirectBuffer*>(
               &_PDirectBuffer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(PDirectBuffer* other);
  friend void swap(PDirectBuffer& a, PDirectBuffer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PDirectBuffer* New() const final {
    return CreateMaybeMessage<PDirectBuffer>(nullptr);
  }

  PDirectBuffer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PDirectBuffer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PDirectBuffer& from);
  void MergeFrom(const PDirectBuffer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PDirectBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 directCount = 1;
  void clear_directcount();
  static const int kDirectCountFieldNumber = 1;
  ::google::protobuf::int64 directcount() const;
  void set_directcount(::google::protobuf::int64 value);

  // int64 directMemoryUsed = 2;
  void clear_directmemoryused();
  static const int kDirectMemoryUsedFieldNumber = 2;
  ::google::protobuf::int64 directmemoryused() const;
  void set_directmemoryused(::google::protobuf::int64 value);

  // int64 mappedCount = 3;
  void clear_mappedcount();
  static const int kMappedCountFieldNumber = 3;
  ::google::protobuf::int64 mappedcount() const;
  void set_mappedcount(::google::protobuf::int64 value);

  // int64 mappedMemoryUsed = 4;
  void clear_mappedmemoryused();
  static const int kMappedMemoryUsedFieldNumber = 4;
  ::google::protobuf::int64 mappedmemoryused() const;
  void set_mappedmemoryused(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:v1.PDirectBuffer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 directcount_;
  ::google::protobuf::int64 directmemoryused_;
  ::google::protobuf::int64 mappedcount_;
  ::google::protobuf::int64 mappedmemoryused_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Stat_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PPing

// -------------------------------------------------------------------

// PStatMessage

// .v1.PAgentStat agentStat = 1;
inline bool PStatMessage::has_agentstat() const {
  return field_case() == kAgentStat;
}
inline void PStatMessage::set_has_agentstat() {
  _oneof_case_[0] = kAgentStat;
}
inline void PStatMessage::clear_agentstat() {
  if (has_agentstat()) {
    delete field_.agentstat_;
    clear_has_field();
  }
}
inline ::v1::PAgentStat* PStatMessage::release_agentstat() {
  // @@protoc_insertion_point(field_release:v1.PStatMessage.agentStat)
  if (has_agentstat()) {
    clear_has_field();
      ::v1::PAgentStat* temp = field_.agentstat_;
    field_.agentstat_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::v1::PAgentStat& PStatMessage::agentstat() const {
  // @@protoc_insertion_point(field_get:v1.PStatMessage.agentStat)
  return has_agentstat()
      ? *field_.agentstat_
      : *reinterpret_cast< ::v1::PAgentStat*>(&::v1::_PAgentStat_default_instance_);
}
inline ::v1::PAgentStat* PStatMessage::mutable_agentstat() {
  if (!has_agentstat()) {
    clear_field();
    set_has_agentstat();
    field_.agentstat_ = CreateMaybeMessage< ::v1::PAgentStat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:v1.PStatMessage.agentStat)
  return field_.agentstat_;
}

// .v1.PAgentStatBatch agentStatBatch = 2;
inline bool PStatMessage::has_agentstatbatch() const {
  return field_case() == kAgentStatBatch;
}
inline void PStatMessage::set_has_agentstatbatch() {
  _oneof_case_[0] = kAgentStatBatch;
}
inline void PStatMessage::clear_agentstatbatch() {
  if (has_agentstatbatch()) {
    delete field_.agentstatbatch_;
    clear_has_field();
  }
}
inline ::v1::PAgentStatBatch* PStatMessage::release_agentstatbatch() {
  // @@protoc_insertion_point(field_release:v1.PStatMessage.agentStatBatch)
  if (has_agentstatbatch()) {
    clear_has_field();
      ::v1::PAgentStatBatch* temp = field_.agentstatbatch_;
    field_.agentstatbatch_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::v1::PAgentStatBatch& PStatMessage::agentstatbatch() const {
  // @@protoc_insertion_point(field_get:v1.PStatMessage.agentStatBatch)
  return has_agentstatbatch()
      ? *field_.agentstatbatch_
      : *reinterpret_cast< ::v1::PAgentStatBatch*>(&::v1::_PAgentStatBatch_default_instance_);
}
inline ::v1::PAgentStatBatch* PStatMessage::mutable_agentstatbatch() {
  if (!has_agentstatbatch()) {
    clear_field();
    set_has_agentstatbatch();
    field_.agentstatbatch_ = CreateMaybeMessage< ::v1::PAgentStatBatch >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:v1.PStatMessage.agentStatBatch)
  return field_.agentstatbatch_;
}

inline bool PStatMessage::has_field() const {
  return field_case() != FIELD_NOT_SET;
}
inline void PStatMessage::clear_has_field() {
  _oneof_case_[0] = FIELD_NOT_SET;
}
inline PStatMessage::FieldCase PStatMessage::field_case() const {
  return PStatMessage::FieldCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PAgentInfo

// string hostname = 1;
inline void PAgentInfo::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PAgentInfo::hostname() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.hostname)
  return hostname_.GetNoArena();
}
inline void PAgentInfo::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.hostname)
}
#if LANG_CXX11
inline void PAgentInfo::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PAgentInfo.hostname)
}
#endif
inline void PAgentInfo::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PAgentInfo.hostname)
}
inline void PAgentInfo::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PAgentInfo.hostname)
}
inline ::std::string* PAgentInfo::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:v1.PAgentInfo.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PAgentInfo::release_hostname() {
  // @@protoc_insertion_point(field_release:v1.PAgentInfo.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAgentInfo::set_allocated_hostname(::std::string* hostname) {
  if (hostname != nullptr) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentInfo.hostname)
}

// string ip = 2;
inline void PAgentInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PAgentInfo::ip() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.ip)
  return ip_.GetNoArena();
}
inline void PAgentInfo::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.ip)
}
#if LANG_CXX11
inline void PAgentInfo::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PAgentInfo.ip)
}
#endif
inline void PAgentInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PAgentInfo.ip)
}
inline void PAgentInfo::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PAgentInfo.ip)
}
inline ::std::string* PAgentInfo::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:v1.PAgentInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PAgentInfo::release_ip() {
  // @@protoc_insertion_point(field_release:v1.PAgentInfo.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAgentInfo::set_allocated_ip(::std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentInfo.ip)
}

// string ports = 3;
inline void PAgentInfo::clear_ports() {
  ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PAgentInfo::ports() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.ports)
  return ports_.GetNoArena();
}
inline void PAgentInfo::set_ports(const ::std::string& value) {
  
  ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.ports)
}
#if LANG_CXX11
inline void PAgentInfo::set_ports(::std::string&& value) {
  
  ports_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PAgentInfo.ports)
}
#endif
inline void PAgentInfo::set_ports(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PAgentInfo.ports)
}
inline void PAgentInfo::set_ports(const char* value, size_t size) {
  
  ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PAgentInfo.ports)
}
inline ::std::string* PAgentInfo::mutable_ports() {
  
  // @@protoc_insertion_point(field_mutable:v1.PAgentInfo.ports)
  return ports_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PAgentInfo::release_ports() {
  // @@protoc_insertion_point(field_release:v1.PAgentInfo.ports)
  
  return ports_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAgentInfo::set_allocated_ports(::std::string* ports) {
  if (ports != nullptr) {
    
  } else {
    
  }
  ports_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ports);
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentInfo.ports)
}

// int32 serviceType = 4;
inline void PAgentInfo::clear_servicetype() {
  servicetype_ = 0;
}
inline ::google::protobuf::int32 PAgentInfo::servicetype() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.serviceType)
  return servicetype_;
}
inline void PAgentInfo::set_servicetype(::google::protobuf::int32 value) {
  
  servicetype_ = value;
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.serviceType)
}

// int32 pid = 5;
inline void PAgentInfo::clear_pid() {
  pid_ = 0;
}
inline ::google::protobuf::int32 PAgentInfo::pid() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.pid)
  return pid_;
}
inline void PAgentInfo::set_pid(::google::protobuf::int32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.pid)
}

// string agentVersion = 6;
inline void PAgentInfo::clear_agentversion() {
  agentversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PAgentInfo::agentversion() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.agentVersion)
  return agentversion_.GetNoArena();
}
inline void PAgentInfo::set_agentversion(const ::std::string& value) {
  
  agentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.agentVersion)
}
#if LANG_CXX11
inline void PAgentInfo::set_agentversion(::std::string&& value) {
  
  agentversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PAgentInfo.agentVersion)
}
#endif
inline void PAgentInfo::set_agentversion(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  agentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PAgentInfo.agentVersion)
}
inline void PAgentInfo::set_agentversion(const char* value, size_t size) {
  
  agentversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PAgentInfo.agentVersion)
}
inline ::std::string* PAgentInfo::mutable_agentversion() {
  
  // @@protoc_insertion_point(field_mutable:v1.PAgentInfo.agentVersion)
  return agentversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PAgentInfo::release_agentversion() {
  // @@protoc_insertion_point(field_release:v1.PAgentInfo.agentVersion)
  
  return agentversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAgentInfo::set_allocated_agentversion(::std::string* agentversion) {
  if (agentversion != nullptr) {
    
  } else {
    
  }
  agentversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agentversion);
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentInfo.agentVersion)
}

// string vmVersion = 7;
inline void PAgentInfo::clear_vmversion() {
  vmversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PAgentInfo::vmversion() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.vmVersion)
  return vmversion_.GetNoArena();
}
inline void PAgentInfo::set_vmversion(const ::std::string& value) {
  
  vmversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.vmVersion)
}
#if LANG_CXX11
inline void PAgentInfo::set_vmversion(::std::string&& value) {
  
  vmversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PAgentInfo.vmVersion)
}
#endif
inline void PAgentInfo::set_vmversion(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  vmversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PAgentInfo.vmVersion)
}
inline void PAgentInfo::set_vmversion(const char* value, size_t size) {
  
  vmversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PAgentInfo.vmVersion)
}
inline ::std::string* PAgentInfo::mutable_vmversion() {
  
  // @@protoc_insertion_point(field_mutable:v1.PAgentInfo.vmVersion)
  return vmversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PAgentInfo::release_vmversion() {
  // @@protoc_insertion_point(field_release:v1.PAgentInfo.vmVersion)
  
  return vmversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAgentInfo::set_allocated_vmversion(::std::string* vmversion) {
  if (vmversion != nullptr) {
    
  } else {
    
  }
  vmversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vmversion);
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentInfo.vmVersion)
}

// int64 endTimestamp = 8;
inline void PAgentInfo::clear_endtimestamp() {
  endtimestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PAgentInfo::endtimestamp() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.endTimestamp)
  return endtimestamp_;
}
inline void PAgentInfo::set_endtimestamp(::google::protobuf::int64 value) {
  
  endtimestamp_ = value;
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.endTimestamp)
}

// int32 endStatus = 9;
inline void PAgentInfo::clear_endstatus() {
  endstatus_ = 0;
}
inline ::google::protobuf::int32 PAgentInfo::endstatus() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.endStatus)
  return endstatus_;
}
inline void PAgentInfo::set_endstatus(::google::protobuf::int32 value) {
  
  endstatus_ = value;
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.endStatus)
}

// .v1.PServerMetaData serverMetaData = 10;
inline bool PAgentInfo::has_servermetadata() const {
  return this != internal_default_instance() && servermetadata_ != nullptr;
}
inline void PAgentInfo::clear_servermetadata() {
  if (GetArenaNoVirtual() == nullptr && servermetadata_ != nullptr) {
    delete servermetadata_;
  }
  servermetadata_ = nullptr;
}
inline const ::v1::PServerMetaData& PAgentInfo::servermetadata() const {
  const ::v1::PServerMetaData* p = servermetadata_;
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.serverMetaData)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PServerMetaData*>(
      &::v1::_PServerMetaData_default_instance_);
}
inline ::v1::PServerMetaData* PAgentInfo::release_servermetadata() {
  // @@protoc_insertion_point(field_release:v1.PAgentInfo.serverMetaData)
  
  ::v1::PServerMetaData* temp = servermetadata_;
  servermetadata_ = nullptr;
  return temp;
}
inline ::v1::PServerMetaData* PAgentInfo::mutable_servermetadata() {
  
  if (servermetadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PServerMetaData>(GetArenaNoVirtual());
    servermetadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentInfo.serverMetaData)
  return servermetadata_;
}
inline void PAgentInfo::set_allocated_servermetadata(::v1::PServerMetaData* servermetadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete servermetadata_;
  }
  if (servermetadata) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      servermetadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servermetadata, submessage_arena);
    }
    
  } else {
    
  }
  servermetadata_ = servermetadata;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentInfo.serverMetaData)
}

// .v1.PJvmInfo jvmInfo = 11;
inline bool PAgentInfo::has_jvminfo() const {
  return this != internal_default_instance() && jvminfo_ != nullptr;
}
inline void PAgentInfo::clear_jvminfo() {
  if (GetArenaNoVirtual() == nullptr && jvminfo_ != nullptr) {
    delete jvminfo_;
  }
  jvminfo_ = nullptr;
}
inline const ::v1::PJvmInfo& PAgentInfo::jvminfo() const {
  const ::v1::PJvmInfo* p = jvminfo_;
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.jvmInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PJvmInfo*>(
      &::v1::_PJvmInfo_default_instance_);
}
inline ::v1::PJvmInfo* PAgentInfo::release_jvminfo() {
  // @@protoc_insertion_point(field_release:v1.PAgentInfo.jvmInfo)
  
  ::v1::PJvmInfo* temp = jvminfo_;
  jvminfo_ = nullptr;
  return temp;
}
inline ::v1::PJvmInfo* PAgentInfo::mutable_jvminfo() {
  
  if (jvminfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PJvmInfo>(GetArenaNoVirtual());
    jvminfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentInfo.jvmInfo)
  return jvminfo_;
}
inline void PAgentInfo::set_allocated_jvminfo(::v1::PJvmInfo* jvminfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete jvminfo_;
  }
  if (jvminfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      jvminfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jvminfo, submessage_arena);
    }
    
  } else {
    
  }
  jvminfo_ = jvminfo;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentInfo.jvmInfo)
}

// bool container = 12;
inline void PAgentInfo::clear_container() {
  container_ = false;
}
inline bool PAgentInfo::container() const {
  // @@protoc_insertion_point(field_get:v1.PAgentInfo.container)
  return container_;
}
inline void PAgentInfo::set_container(bool value) {
  
  container_ = value;
  // @@protoc_insertion_point(field_set:v1.PAgentInfo.container)
}

// -------------------------------------------------------------------

// PServerMetaData

// string serverInfo = 1;
inline void PServerMetaData::clear_serverinfo() {
  serverinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PServerMetaData::serverinfo() const {
  // @@protoc_insertion_point(field_get:v1.PServerMetaData.serverInfo)
  return serverinfo_.GetNoArena();
}
inline void PServerMetaData::set_serverinfo(const ::std::string& value) {
  
  serverinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PServerMetaData.serverInfo)
}
#if LANG_CXX11
inline void PServerMetaData::set_serverinfo(::std::string&& value) {
  
  serverinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PServerMetaData.serverInfo)
}
#endif
inline void PServerMetaData::set_serverinfo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  serverinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PServerMetaData.serverInfo)
}
inline void PServerMetaData::set_serverinfo(const char* value, size_t size) {
  
  serverinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PServerMetaData.serverInfo)
}
inline ::std::string* PServerMetaData::mutable_serverinfo() {
  
  // @@protoc_insertion_point(field_mutable:v1.PServerMetaData.serverInfo)
  return serverinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PServerMetaData::release_serverinfo() {
  // @@protoc_insertion_point(field_release:v1.PServerMetaData.serverInfo)
  
  return serverinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PServerMetaData::set_allocated_serverinfo(::std::string* serverinfo) {
  if (serverinfo != nullptr) {
    
  } else {
    
  }
  serverinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverinfo);
  // @@protoc_insertion_point(field_set_allocated:v1.PServerMetaData.serverInfo)
}

// repeated string vmArg = 2;
inline int PServerMetaData::vmarg_size() const {
  return vmarg_.size();
}
inline void PServerMetaData::clear_vmarg() {
  vmarg_.Clear();
}
inline const ::std::string& PServerMetaData::vmarg(int index) const {
  // @@protoc_insertion_point(field_get:v1.PServerMetaData.vmArg)
  return vmarg_.Get(index);
}
inline ::std::string* PServerMetaData::mutable_vmarg(int index) {
  // @@protoc_insertion_point(field_mutable:v1.PServerMetaData.vmArg)
  return vmarg_.Mutable(index);
}
inline void PServerMetaData::set_vmarg(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:v1.PServerMetaData.vmArg)
  vmarg_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PServerMetaData::set_vmarg(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:v1.PServerMetaData.vmArg)
  vmarg_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PServerMetaData::set_vmarg(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  vmarg_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:v1.PServerMetaData.vmArg)
}
inline void PServerMetaData::set_vmarg(int index, const char* value, size_t size) {
  vmarg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:v1.PServerMetaData.vmArg)
}
inline ::std::string* PServerMetaData::add_vmarg() {
  // @@protoc_insertion_point(field_add_mutable:v1.PServerMetaData.vmArg)
  return vmarg_.Add();
}
inline void PServerMetaData::add_vmarg(const ::std::string& value) {
  vmarg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:v1.PServerMetaData.vmArg)
}
#if LANG_CXX11
inline void PServerMetaData::add_vmarg(::std::string&& value) {
  vmarg_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:v1.PServerMetaData.vmArg)
}
#endif
inline void PServerMetaData::add_vmarg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  vmarg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:v1.PServerMetaData.vmArg)
}
inline void PServerMetaData::add_vmarg(const char* value, size_t size) {
  vmarg_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:v1.PServerMetaData.vmArg)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
PServerMetaData::vmarg() const {
  // @@protoc_insertion_point(field_list:v1.PServerMetaData.vmArg)
  return vmarg_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
PServerMetaData::mutable_vmarg() {
  // @@protoc_insertion_point(field_mutable_list:v1.PServerMetaData.vmArg)
  return &vmarg_;
}

// repeated .v1.PServiceInfo serviceInfo = 3;
inline int PServerMetaData::serviceinfo_size() const {
  return serviceinfo_.size();
}
inline void PServerMetaData::clear_serviceinfo() {
  serviceinfo_.Clear();
}
inline ::v1::PServiceInfo* PServerMetaData::mutable_serviceinfo(int index) {
  // @@protoc_insertion_point(field_mutable:v1.PServerMetaData.serviceInfo)
  return serviceinfo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::v1::PServiceInfo >*
PServerMetaData::mutable_serviceinfo() {
  // @@protoc_insertion_point(field_mutable_list:v1.PServerMetaData.serviceInfo)
  return &serviceinfo_;
}
inline const ::v1::PServiceInfo& PServerMetaData::serviceinfo(int index) const {
  // @@protoc_insertion_point(field_get:v1.PServerMetaData.serviceInfo)
  return serviceinfo_.Get(index);
}
inline ::v1::PServiceInfo* PServerMetaData::add_serviceinfo() {
  // @@protoc_insertion_point(field_add:v1.PServerMetaData.serviceInfo)
  return serviceinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::v1::PServiceInfo >&
PServerMetaData::serviceinfo() const {
  // @@protoc_insertion_point(field_list:v1.PServerMetaData.serviceInfo)
  return serviceinfo_;
}

// -------------------------------------------------------------------

// PServiceInfo

// string serviceName = 1;
inline void PServiceInfo::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PServiceInfo::servicename() const {
  // @@protoc_insertion_point(field_get:v1.PServiceInfo.serviceName)
  return servicename_.GetNoArena();
}
inline void PServiceInfo::set_servicename(const ::std::string& value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PServiceInfo.serviceName)
}
#if LANG_CXX11
inline void PServiceInfo::set_servicename(::std::string&& value) {
  
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PServiceInfo.serviceName)
}
#endif
inline void PServiceInfo::set_servicename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PServiceInfo.serviceName)
}
inline void PServiceInfo::set_servicename(const char* value, size_t size) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PServiceInfo.serviceName)
}
inline ::std::string* PServiceInfo::mutable_servicename() {
  
  // @@protoc_insertion_point(field_mutable:v1.PServiceInfo.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PServiceInfo::release_servicename() {
  // @@protoc_insertion_point(field_release:v1.PServiceInfo.serviceName)
  
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PServiceInfo::set_allocated_servicename(::std::string* servicename) {
  if (servicename != nullptr) {
    
  } else {
    
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:v1.PServiceInfo.serviceName)
}

// repeated string serviceLib = 2;
inline int PServiceInfo::servicelib_size() const {
  return servicelib_.size();
}
inline void PServiceInfo::clear_servicelib() {
  servicelib_.Clear();
}
inline const ::std::string& PServiceInfo::servicelib(int index) const {
  // @@protoc_insertion_point(field_get:v1.PServiceInfo.serviceLib)
  return servicelib_.Get(index);
}
inline ::std::string* PServiceInfo::mutable_servicelib(int index) {
  // @@protoc_insertion_point(field_mutable:v1.PServiceInfo.serviceLib)
  return servicelib_.Mutable(index);
}
inline void PServiceInfo::set_servicelib(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:v1.PServiceInfo.serviceLib)
  servicelib_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PServiceInfo::set_servicelib(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:v1.PServiceInfo.serviceLib)
  servicelib_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PServiceInfo::set_servicelib(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  servicelib_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:v1.PServiceInfo.serviceLib)
}
inline void PServiceInfo::set_servicelib(int index, const char* value, size_t size) {
  servicelib_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:v1.PServiceInfo.serviceLib)
}
inline ::std::string* PServiceInfo::add_servicelib() {
  // @@protoc_insertion_point(field_add_mutable:v1.PServiceInfo.serviceLib)
  return servicelib_.Add();
}
inline void PServiceInfo::add_servicelib(const ::std::string& value) {
  servicelib_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:v1.PServiceInfo.serviceLib)
}
#if LANG_CXX11
inline void PServiceInfo::add_servicelib(::std::string&& value) {
  servicelib_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:v1.PServiceInfo.serviceLib)
}
#endif
inline void PServiceInfo::add_servicelib(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  servicelib_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:v1.PServiceInfo.serviceLib)
}
inline void PServiceInfo::add_servicelib(const char* value, size_t size) {
  servicelib_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:v1.PServiceInfo.serviceLib)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
PServiceInfo::servicelib() const {
  // @@protoc_insertion_point(field_list:v1.PServiceInfo.serviceLib)
  return servicelib_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
PServiceInfo::mutable_servicelib() {
  // @@protoc_insertion_point(field_mutable_list:v1.PServiceInfo.serviceLib)
  return &servicelib_;
}

// -------------------------------------------------------------------

// PJvmInfo

// int32 version = 1;
inline void PJvmInfo::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 PJvmInfo::version() const {
  // @@protoc_insertion_point(field_get:v1.PJvmInfo.version)
  return version_;
}
inline void PJvmInfo::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmInfo.version)
}

// string vmVersion = 2;
inline void PJvmInfo::clear_vmversion() {
  vmversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PJvmInfo::vmversion() const {
  // @@protoc_insertion_point(field_get:v1.PJvmInfo.vmVersion)
  return vmversion_.GetNoArena();
}
inline void PJvmInfo::set_vmversion(const ::std::string& value) {
  
  vmversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PJvmInfo.vmVersion)
}
#if LANG_CXX11
inline void PJvmInfo::set_vmversion(::std::string&& value) {
  
  vmversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PJvmInfo.vmVersion)
}
#endif
inline void PJvmInfo::set_vmversion(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  vmversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PJvmInfo.vmVersion)
}
inline void PJvmInfo::set_vmversion(const char* value, size_t size) {
  
  vmversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PJvmInfo.vmVersion)
}
inline ::std::string* PJvmInfo::mutable_vmversion() {
  
  // @@protoc_insertion_point(field_mutable:v1.PJvmInfo.vmVersion)
  return vmversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PJvmInfo::release_vmversion() {
  // @@protoc_insertion_point(field_release:v1.PJvmInfo.vmVersion)
  
  return vmversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PJvmInfo::set_allocated_vmversion(::std::string* vmversion) {
  if (vmversion != nullptr) {
    
  } else {
    
  }
  vmversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vmversion);
  // @@protoc_insertion_point(field_set_allocated:v1.PJvmInfo.vmVersion)
}

// .v1.PJvmGcType gcType = 3;
inline void PJvmInfo::clear_gctype() {
  gctype_ = 0;
}
inline ::v1::PJvmGcType PJvmInfo::gctype() const {
  // @@protoc_insertion_point(field_get:v1.PJvmInfo.gcType)
  return static_cast< ::v1::PJvmGcType >(gctype_);
}
inline void PJvmInfo::set_gctype(::v1::PJvmGcType value) {
  
  gctype_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmInfo.gcType)
}

// -------------------------------------------------------------------

// PAgentStat

// int64 timestamp = 1;
inline void PAgentStat::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PAgentStat::timestamp() const {
  // @@protoc_insertion_point(field_get:v1.PAgentStat.timestamp)
  return timestamp_;
}
inline void PAgentStat::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:v1.PAgentStat.timestamp)
}

// int64 collectInterval = 2;
inline void PAgentStat::clear_collectinterval() {
  collectinterval_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PAgentStat::collectinterval() const {
  // @@protoc_insertion_point(field_get:v1.PAgentStat.collectInterval)
  return collectinterval_;
}
inline void PAgentStat::set_collectinterval(::google::protobuf::int64 value) {
  
  collectinterval_ = value;
  // @@protoc_insertion_point(field_set:v1.PAgentStat.collectInterval)
}

// .v1.PJvmGc gc = 3;
inline bool PAgentStat::has_gc() const {
  return this != internal_default_instance() && gc_ != nullptr;
}
inline void PAgentStat::clear_gc() {
  if (GetArenaNoVirtual() == nullptr && gc_ != nullptr) {
    delete gc_;
  }
  gc_ = nullptr;
}
inline const ::v1::PJvmGc& PAgentStat::gc() const {
  const ::v1::PJvmGc* p = gc_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.gc)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PJvmGc*>(
      &::v1::_PJvmGc_default_instance_);
}
inline ::v1::PJvmGc* PAgentStat::release_gc() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.gc)
  
  ::v1::PJvmGc* temp = gc_;
  gc_ = nullptr;
  return temp;
}
inline ::v1::PJvmGc* PAgentStat::mutable_gc() {
  
  if (gc_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PJvmGc>(GetArenaNoVirtual());
    gc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.gc)
  return gc_;
}
inline void PAgentStat::set_allocated_gc(::v1::PJvmGc* gc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete gc_;
  }
  if (gc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      gc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gc, submessage_arena);
    }
    
  } else {
    
  }
  gc_ = gc;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.gc)
}

// .v1.PCpuLoad cpuLoad = 4;
inline bool PAgentStat::has_cpuload() const {
  return this != internal_default_instance() && cpuload_ != nullptr;
}
inline void PAgentStat::clear_cpuload() {
  if (GetArenaNoVirtual() == nullptr && cpuload_ != nullptr) {
    delete cpuload_;
  }
  cpuload_ = nullptr;
}
inline const ::v1::PCpuLoad& PAgentStat::cpuload() const {
  const ::v1::PCpuLoad* p = cpuload_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.cpuLoad)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PCpuLoad*>(
      &::v1::_PCpuLoad_default_instance_);
}
inline ::v1::PCpuLoad* PAgentStat::release_cpuload() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.cpuLoad)
  
  ::v1::PCpuLoad* temp = cpuload_;
  cpuload_ = nullptr;
  return temp;
}
inline ::v1::PCpuLoad* PAgentStat::mutable_cpuload() {
  
  if (cpuload_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PCpuLoad>(GetArenaNoVirtual());
    cpuload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.cpuLoad)
  return cpuload_;
}
inline void PAgentStat::set_allocated_cpuload(::v1::PCpuLoad* cpuload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete cpuload_;
  }
  if (cpuload) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cpuload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpuload, submessage_arena);
    }
    
  } else {
    
  }
  cpuload_ = cpuload;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.cpuLoad)
}

// .v1.PTransaction transaction = 5;
inline bool PAgentStat::has_transaction() const {
  return this != internal_default_instance() && transaction_ != nullptr;
}
inline void PAgentStat::clear_transaction() {
  if (GetArenaNoVirtual() == nullptr && transaction_ != nullptr) {
    delete transaction_;
  }
  transaction_ = nullptr;
}
inline const ::v1::PTransaction& PAgentStat::transaction() const {
  const ::v1::PTransaction* p = transaction_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.transaction)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PTransaction*>(
      &::v1::_PTransaction_default_instance_);
}
inline ::v1::PTransaction* PAgentStat::release_transaction() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.transaction)
  
  ::v1::PTransaction* temp = transaction_;
  transaction_ = nullptr;
  return temp;
}
inline ::v1::PTransaction* PAgentStat::mutable_transaction() {
  
  if (transaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PTransaction>(GetArenaNoVirtual());
    transaction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.transaction)
  return transaction_;
}
inline void PAgentStat::set_allocated_transaction(::v1::PTransaction* transaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete transaction_;
  }
  if (transaction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transaction, submessage_arena);
    }
    
  } else {
    
  }
  transaction_ = transaction;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.transaction)
}

// .v1.PActiveTrace activeTrace = 6;
inline bool PAgentStat::has_activetrace() const {
  return this != internal_default_instance() && activetrace_ != nullptr;
}
inline void PAgentStat::clear_activetrace() {
  if (GetArenaNoVirtual() == nullptr && activetrace_ != nullptr) {
    delete activetrace_;
  }
  activetrace_ = nullptr;
}
inline const ::v1::PActiveTrace& PAgentStat::activetrace() const {
  const ::v1::PActiveTrace* p = activetrace_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.activeTrace)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PActiveTrace*>(
      &::v1::_PActiveTrace_default_instance_);
}
inline ::v1::PActiveTrace* PAgentStat::release_activetrace() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.activeTrace)
  
  ::v1::PActiveTrace* temp = activetrace_;
  activetrace_ = nullptr;
  return temp;
}
inline ::v1::PActiveTrace* PAgentStat::mutable_activetrace() {
  
  if (activetrace_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PActiveTrace>(GetArenaNoVirtual());
    activetrace_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.activeTrace)
  return activetrace_;
}
inline void PAgentStat::set_allocated_activetrace(::v1::PActiveTrace* activetrace) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete activetrace_;
  }
  if (activetrace) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      activetrace = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, activetrace, submessage_arena);
    }
    
  } else {
    
  }
  activetrace_ = activetrace;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.activeTrace)
}

// .v1.PDataSourceList dataSourceList = 7;
inline bool PAgentStat::has_datasourcelist() const {
  return this != internal_default_instance() && datasourcelist_ != nullptr;
}
inline void PAgentStat::clear_datasourcelist() {
  if (GetArenaNoVirtual() == nullptr && datasourcelist_ != nullptr) {
    delete datasourcelist_;
  }
  datasourcelist_ = nullptr;
}
inline const ::v1::PDataSourceList& PAgentStat::datasourcelist() const {
  const ::v1::PDataSourceList* p = datasourcelist_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.dataSourceList)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PDataSourceList*>(
      &::v1::_PDataSourceList_default_instance_);
}
inline ::v1::PDataSourceList* PAgentStat::release_datasourcelist() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.dataSourceList)
  
  ::v1::PDataSourceList* temp = datasourcelist_;
  datasourcelist_ = nullptr;
  return temp;
}
inline ::v1::PDataSourceList* PAgentStat::mutable_datasourcelist() {
  
  if (datasourcelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PDataSourceList>(GetArenaNoVirtual());
    datasourcelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.dataSourceList)
  return datasourcelist_;
}
inline void PAgentStat::set_allocated_datasourcelist(::v1::PDataSourceList* datasourcelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete datasourcelist_;
  }
  if (datasourcelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      datasourcelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, datasourcelist, submessage_arena);
    }
    
  } else {
    
  }
  datasourcelist_ = datasourcelist;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.dataSourceList)
}

// .v1.PResponseTime responseTime = 8;
inline bool PAgentStat::has_responsetime() const {
  return this != internal_default_instance() && responsetime_ != nullptr;
}
inline void PAgentStat::clear_responsetime() {
  if (GetArenaNoVirtual() == nullptr && responsetime_ != nullptr) {
    delete responsetime_;
  }
  responsetime_ = nullptr;
}
inline const ::v1::PResponseTime& PAgentStat::responsetime() const {
  const ::v1::PResponseTime* p = responsetime_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.responseTime)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PResponseTime*>(
      &::v1::_PResponseTime_default_instance_);
}
inline ::v1::PResponseTime* PAgentStat::release_responsetime() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.responseTime)
  
  ::v1::PResponseTime* temp = responsetime_;
  responsetime_ = nullptr;
  return temp;
}
inline ::v1::PResponseTime* PAgentStat::mutable_responsetime() {
  
  if (responsetime_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PResponseTime>(GetArenaNoVirtual());
    responsetime_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.responseTime)
  return responsetime_;
}
inline void PAgentStat::set_allocated_responsetime(::v1::PResponseTime* responsetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete responsetime_;
  }
  if (responsetime) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      responsetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, responsetime, submessage_arena);
    }
    
  } else {
    
  }
  responsetime_ = responsetime;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.responseTime)
}

// .v1.PDeadlock deadlock = 9;
inline bool PAgentStat::has_deadlock() const {
  return this != internal_default_instance() && deadlock_ != nullptr;
}
inline void PAgentStat::clear_deadlock() {
  if (GetArenaNoVirtual() == nullptr && deadlock_ != nullptr) {
    delete deadlock_;
  }
  deadlock_ = nullptr;
}
inline const ::v1::PDeadlock& PAgentStat::deadlock() const {
  const ::v1::PDeadlock* p = deadlock_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.deadlock)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PDeadlock*>(
      &::v1::_PDeadlock_default_instance_);
}
inline ::v1::PDeadlock* PAgentStat::release_deadlock() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.deadlock)
  
  ::v1::PDeadlock* temp = deadlock_;
  deadlock_ = nullptr;
  return temp;
}
inline ::v1::PDeadlock* PAgentStat::mutable_deadlock() {
  
  if (deadlock_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PDeadlock>(GetArenaNoVirtual());
    deadlock_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.deadlock)
  return deadlock_;
}
inline void PAgentStat::set_allocated_deadlock(::v1::PDeadlock* deadlock) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete deadlock_;
  }
  if (deadlock) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      deadlock = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deadlock, submessage_arena);
    }
    
  } else {
    
  }
  deadlock_ = deadlock;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.deadlock)
}

// .v1.PFileDescriptor fileDescriptor = 10;
inline bool PAgentStat::has_filedescriptor() const {
  return this != internal_default_instance() && filedescriptor_ != nullptr;
}
inline void PAgentStat::clear_filedescriptor() {
  if (GetArenaNoVirtual() == nullptr && filedescriptor_ != nullptr) {
    delete filedescriptor_;
  }
  filedescriptor_ = nullptr;
}
inline const ::v1::PFileDescriptor& PAgentStat::filedescriptor() const {
  const ::v1::PFileDescriptor* p = filedescriptor_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.fileDescriptor)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PFileDescriptor*>(
      &::v1::_PFileDescriptor_default_instance_);
}
inline ::v1::PFileDescriptor* PAgentStat::release_filedescriptor() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.fileDescriptor)
  
  ::v1::PFileDescriptor* temp = filedescriptor_;
  filedescriptor_ = nullptr;
  return temp;
}
inline ::v1::PFileDescriptor* PAgentStat::mutable_filedescriptor() {
  
  if (filedescriptor_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PFileDescriptor>(GetArenaNoVirtual());
    filedescriptor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.fileDescriptor)
  return filedescriptor_;
}
inline void PAgentStat::set_allocated_filedescriptor(::v1::PFileDescriptor* filedescriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete filedescriptor_;
  }
  if (filedescriptor) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      filedescriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, filedescriptor, submessage_arena);
    }
    
  } else {
    
  }
  filedescriptor_ = filedescriptor;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.fileDescriptor)
}

// .v1.PDirectBuffer directBuffer = 11;
inline bool PAgentStat::has_directbuffer() const {
  return this != internal_default_instance() && directbuffer_ != nullptr;
}
inline void PAgentStat::clear_directbuffer() {
  if (GetArenaNoVirtual() == nullptr && directbuffer_ != nullptr) {
    delete directbuffer_;
  }
  directbuffer_ = nullptr;
}
inline const ::v1::PDirectBuffer& PAgentStat::directbuffer() const {
  const ::v1::PDirectBuffer* p = directbuffer_;
  // @@protoc_insertion_point(field_get:v1.PAgentStat.directBuffer)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PDirectBuffer*>(
      &::v1::_PDirectBuffer_default_instance_);
}
inline ::v1::PDirectBuffer* PAgentStat::release_directbuffer() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.directBuffer)
  
  ::v1::PDirectBuffer* temp = directbuffer_;
  directbuffer_ = nullptr;
  return temp;
}
inline ::v1::PDirectBuffer* PAgentStat::mutable_directbuffer() {
  
  if (directbuffer_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PDirectBuffer>(GetArenaNoVirtual());
    directbuffer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.directBuffer)
  return directbuffer_;
}
inline void PAgentStat::set_allocated_directbuffer(::v1::PDirectBuffer* directbuffer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete directbuffer_;
  }
  if (directbuffer) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      directbuffer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, directbuffer, submessage_arena);
    }
    
  } else {
    
  }
  directbuffer_ = directbuffer;
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.directBuffer)
}

// string metadata = 12;
inline void PAgentStat::clear_metadata() {
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PAgentStat::metadata() const {
  // @@protoc_insertion_point(field_get:v1.PAgentStat.metadata)
  return metadata_.GetNoArena();
}
inline void PAgentStat::set_metadata(const ::std::string& value) {
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PAgentStat.metadata)
}
#if LANG_CXX11
inline void PAgentStat::set_metadata(::std::string&& value) {
  
  metadata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PAgentStat.metadata)
}
#endif
inline void PAgentStat::set_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PAgentStat.metadata)
}
inline void PAgentStat::set_metadata(const char* value, size_t size) {
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PAgentStat.metadata)
}
inline ::std::string* PAgentStat::mutable_metadata() {
  
  // @@protoc_insertion_point(field_mutable:v1.PAgentStat.metadata)
  return metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PAgentStat::release_metadata() {
  // @@protoc_insertion_point(field_release:v1.PAgentStat.metadata)
  
  return metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAgentStat::set_allocated_metadata(::std::string* metadata) {
  if (metadata != nullptr) {
    
  } else {
    
  }
  metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metadata);
  // @@protoc_insertion_point(field_set_allocated:v1.PAgentStat.metadata)
}

// -------------------------------------------------------------------

// PAgentStatBatch

// repeated .v1.PAgentStat agentStat = 1;
inline int PAgentStatBatch::agentstat_size() const {
  return agentstat_.size();
}
inline void PAgentStatBatch::clear_agentstat() {
  agentstat_.Clear();
}
inline ::v1::PAgentStat* PAgentStatBatch::mutable_agentstat(int index) {
  // @@protoc_insertion_point(field_mutable:v1.PAgentStatBatch.agentStat)
  return agentstat_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::v1::PAgentStat >*
PAgentStatBatch::mutable_agentstat() {
  // @@protoc_insertion_point(field_mutable_list:v1.PAgentStatBatch.agentStat)
  return &agentstat_;
}
inline const ::v1::PAgentStat& PAgentStatBatch::agentstat(int index) const {
  // @@protoc_insertion_point(field_get:v1.PAgentStatBatch.agentStat)
  return agentstat_.Get(index);
}
inline ::v1::PAgentStat* PAgentStatBatch::add_agentstat() {
  // @@protoc_insertion_point(field_add:v1.PAgentStatBatch.agentStat)
  return agentstat_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::v1::PAgentStat >&
PAgentStatBatch::agentstat() const {
  // @@protoc_insertion_point(field_list:v1.PAgentStatBatch.agentStat)
  return agentstat_;
}

// -------------------------------------------------------------------

// PDataSource

// int32 id = 1;
inline void PDataSource::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 PDataSource::id() const {
  // @@protoc_insertion_point(field_get:v1.PDataSource.id)
  return id_;
}
inline void PDataSource::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:v1.PDataSource.id)
}

// int32 serviceTypeCode = 2;
inline void PDataSource::clear_servicetypecode() {
  servicetypecode_ = 0;
}
inline ::google::protobuf::int32 PDataSource::servicetypecode() const {
  // @@protoc_insertion_point(field_get:v1.PDataSource.serviceTypeCode)
  return servicetypecode_;
}
inline void PDataSource::set_servicetypecode(::google::protobuf::int32 value) {
  
  servicetypecode_ = value;
  // @@protoc_insertion_point(field_set:v1.PDataSource.serviceTypeCode)
}

// string databaseName = 3;
inline void PDataSource::clear_databasename() {
  databasename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PDataSource::databasename() const {
  // @@protoc_insertion_point(field_get:v1.PDataSource.databaseName)
  return databasename_.GetNoArena();
}
inline void PDataSource::set_databasename(const ::std::string& value) {
  
  databasename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PDataSource.databaseName)
}
#if LANG_CXX11
inline void PDataSource::set_databasename(::std::string&& value) {
  
  databasename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PDataSource.databaseName)
}
#endif
inline void PDataSource::set_databasename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  databasename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PDataSource.databaseName)
}
inline void PDataSource::set_databasename(const char* value, size_t size) {
  
  databasename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PDataSource.databaseName)
}
inline ::std::string* PDataSource::mutable_databasename() {
  
  // @@protoc_insertion_point(field_mutable:v1.PDataSource.databaseName)
  return databasename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PDataSource::release_databasename() {
  // @@protoc_insertion_point(field_release:v1.PDataSource.databaseName)
  
  return databasename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDataSource::set_allocated_databasename(::std::string* databasename) {
  if (databasename != nullptr) {
    
  } else {
    
  }
  databasename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), databasename);
  // @@protoc_insertion_point(field_set_allocated:v1.PDataSource.databaseName)
}

// string url = 4;
inline void PDataSource::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PDataSource::url() const {
  // @@protoc_insertion_point(field_get:v1.PDataSource.url)
  return url_.GetNoArena();
}
inline void PDataSource::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v1.PDataSource.url)
}
#if LANG_CXX11
inline void PDataSource::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v1.PDataSource.url)
}
#endif
inline void PDataSource::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v1.PDataSource.url)
}
inline void PDataSource::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v1.PDataSource.url)
}
inline ::std::string* PDataSource::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:v1.PDataSource.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PDataSource::release_url() {
  // @@protoc_insertion_point(field_release:v1.PDataSource.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDataSource::set_allocated_url(::std::string* url) {
  if (url != nullptr) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:v1.PDataSource.url)
}

// int32 activeConnectionSize = 5;
inline void PDataSource::clear_activeconnectionsize() {
  activeconnectionsize_ = 0;
}
inline ::google::protobuf::int32 PDataSource::activeconnectionsize() const {
  // @@protoc_insertion_point(field_get:v1.PDataSource.activeConnectionSize)
  return activeconnectionsize_;
}
inline void PDataSource::set_activeconnectionsize(::google::protobuf::int32 value) {
  
  activeconnectionsize_ = value;
  // @@protoc_insertion_point(field_set:v1.PDataSource.activeConnectionSize)
}

// int32 maxConnectionSize = 6;
inline void PDataSource::clear_maxconnectionsize() {
  maxconnectionsize_ = 0;
}
inline ::google::protobuf::int32 PDataSource::maxconnectionsize() const {
  // @@protoc_insertion_point(field_get:v1.PDataSource.maxConnectionSize)
  return maxconnectionsize_;
}
inline void PDataSource::set_maxconnectionsize(::google::protobuf::int32 value) {
  
  maxconnectionsize_ = value;
  // @@protoc_insertion_point(field_set:v1.PDataSource.maxConnectionSize)
}

// -------------------------------------------------------------------

// PDataSourceList

// repeated .v1.PDataSource dataSource = 1;
inline int PDataSourceList::datasource_size() const {
  return datasource_.size();
}
inline void PDataSourceList::clear_datasource() {
  datasource_.Clear();
}
inline ::v1::PDataSource* PDataSourceList::mutable_datasource(int index) {
  // @@protoc_insertion_point(field_mutable:v1.PDataSourceList.dataSource)
  return datasource_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::v1::PDataSource >*
PDataSourceList::mutable_datasource() {
  // @@protoc_insertion_point(field_mutable_list:v1.PDataSourceList.dataSource)
  return &datasource_;
}
inline const ::v1::PDataSource& PDataSourceList::datasource(int index) const {
  // @@protoc_insertion_point(field_get:v1.PDataSourceList.dataSource)
  return datasource_.Get(index);
}
inline ::v1::PDataSource* PDataSourceList::add_datasource() {
  // @@protoc_insertion_point(field_add:v1.PDataSourceList.dataSource)
  return datasource_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::v1::PDataSource >&
PDataSourceList::datasource() const {
  // @@protoc_insertion_point(field_list:v1.PDataSourceList.dataSource)
  return datasource_;
}

// -------------------------------------------------------------------

// PFileDescriptor

// int64 openFileDescriptorCount = 1;
inline void PFileDescriptor::clear_openfiledescriptorcount() {
  openfiledescriptorcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PFileDescriptor::openfiledescriptorcount() const {
  // @@protoc_insertion_point(field_get:v1.PFileDescriptor.openFileDescriptorCount)
  return openfiledescriptorcount_;
}
inline void PFileDescriptor::set_openfiledescriptorcount(::google::protobuf::int64 value) {
  
  openfiledescriptorcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PFileDescriptor.openFileDescriptorCount)
}

// -------------------------------------------------------------------

// PJvmGc

// .v1.PJvmGcType type = 1;
inline void PJvmGc::clear_type() {
  type_ = 0;
}
inline ::v1::PJvmGcType PJvmGc::type() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGc.type)
  return static_cast< ::v1::PJvmGcType >(type_);
}
inline void PJvmGc::set_type(::v1::PJvmGcType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGc.type)
}

// int64 jvmMemoryHeapUsed = 2;
inline void PJvmGc::clear_jvmmemoryheapused() {
  jvmmemoryheapused_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGc::jvmmemoryheapused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGc.jvmMemoryHeapUsed)
  return jvmmemoryheapused_;
}
inline void PJvmGc::set_jvmmemoryheapused(::google::protobuf::int64 value) {
  
  jvmmemoryheapused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGc.jvmMemoryHeapUsed)
}

// int64 jvmMemoryHeapMax = 3;
inline void PJvmGc::clear_jvmmemoryheapmax() {
  jvmmemoryheapmax_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGc::jvmmemoryheapmax() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGc.jvmMemoryHeapMax)
  return jvmmemoryheapmax_;
}
inline void PJvmGc::set_jvmmemoryheapmax(::google::protobuf::int64 value) {
  
  jvmmemoryheapmax_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGc.jvmMemoryHeapMax)
}

// int64 jvmMemoryNonHeapUsed = 4;
inline void PJvmGc::clear_jvmmemorynonheapused() {
  jvmmemorynonheapused_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGc::jvmmemorynonheapused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGc.jvmMemoryNonHeapUsed)
  return jvmmemorynonheapused_;
}
inline void PJvmGc::set_jvmmemorynonheapused(::google::protobuf::int64 value) {
  
  jvmmemorynonheapused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGc.jvmMemoryNonHeapUsed)
}

// int64 jvmMemoryNonHeapMax = 5;
inline void PJvmGc::clear_jvmmemorynonheapmax() {
  jvmmemorynonheapmax_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGc::jvmmemorynonheapmax() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGc.jvmMemoryNonHeapMax)
  return jvmmemorynonheapmax_;
}
inline void PJvmGc::set_jvmmemorynonheapmax(::google::protobuf::int64 value) {
  
  jvmmemorynonheapmax_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGc.jvmMemoryNonHeapMax)
}

// int64 jvmGcOldCount = 6;
inline void PJvmGc::clear_jvmgcoldcount() {
  jvmgcoldcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGc::jvmgcoldcount() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGc.jvmGcOldCount)
  return jvmgcoldcount_;
}
inline void PJvmGc::set_jvmgcoldcount(::google::protobuf::int64 value) {
  
  jvmgcoldcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGc.jvmGcOldCount)
}

// int64 jvmGcOldTime = 7;
inline void PJvmGc::clear_jvmgcoldtime() {
  jvmgcoldtime_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGc::jvmgcoldtime() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGc.jvmGcOldTime)
  return jvmgcoldtime_;
}
inline void PJvmGc::set_jvmgcoldtime(::google::protobuf::int64 value) {
  
  jvmgcoldtime_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGc.jvmGcOldTime)
}

// .v1.PJvmGcDetailed jvmGcDetailed = 8;
inline bool PJvmGc::has_jvmgcdetailed() const {
  return this != internal_default_instance() && jvmgcdetailed_ != nullptr;
}
inline void PJvmGc::clear_jvmgcdetailed() {
  if (GetArenaNoVirtual() == nullptr && jvmgcdetailed_ != nullptr) {
    delete jvmgcdetailed_;
  }
  jvmgcdetailed_ = nullptr;
}
inline const ::v1::PJvmGcDetailed& PJvmGc::jvmgcdetailed() const {
  const ::v1::PJvmGcDetailed* p = jvmgcdetailed_;
  // @@protoc_insertion_point(field_get:v1.PJvmGc.jvmGcDetailed)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PJvmGcDetailed*>(
      &::v1::_PJvmGcDetailed_default_instance_);
}
inline ::v1::PJvmGcDetailed* PJvmGc::release_jvmgcdetailed() {
  // @@protoc_insertion_point(field_release:v1.PJvmGc.jvmGcDetailed)
  
  ::v1::PJvmGcDetailed* temp = jvmgcdetailed_;
  jvmgcdetailed_ = nullptr;
  return temp;
}
inline ::v1::PJvmGcDetailed* PJvmGc::mutable_jvmgcdetailed() {
  
  if (jvmgcdetailed_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PJvmGcDetailed>(GetArenaNoVirtual());
    jvmgcdetailed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PJvmGc.jvmGcDetailed)
  return jvmgcdetailed_;
}
inline void PJvmGc::set_allocated_jvmgcdetailed(::v1::PJvmGcDetailed* jvmgcdetailed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete jvmgcdetailed_;
  }
  if (jvmgcdetailed) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      jvmgcdetailed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jvmgcdetailed, submessage_arena);
    }
    
  } else {
    
  }
  jvmgcdetailed_ = jvmgcdetailed;
  // @@protoc_insertion_point(field_set_allocated:v1.PJvmGc.jvmGcDetailed)
}

// -------------------------------------------------------------------

// PJvmGcDetailed

// int64 jvmGcNewCount = 1;
inline void PJvmGcDetailed::clear_jvmgcnewcount() {
  jvmgcnewcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGcDetailed::jvmgcnewcount() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmGcNewCount)
  return jvmgcnewcount_;
}
inline void PJvmGcDetailed::set_jvmgcnewcount(::google::protobuf::int64 value) {
  
  jvmgcnewcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmGcNewCount)
}

// int64 jvmGcNewTime = 2;
inline void PJvmGcDetailed::clear_jvmgcnewtime() {
  jvmgcnewtime_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PJvmGcDetailed::jvmgcnewtime() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmGcNewTime)
  return jvmgcnewtime_;
}
inline void PJvmGcDetailed::set_jvmgcnewtime(::google::protobuf::int64 value) {
  
  jvmgcnewtime_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmGcNewTime)
}

// double jvmPoolCodeCacheUsed = 3;
inline void PJvmGcDetailed::clear_jvmpoolcodecacheused() {
  jvmpoolcodecacheused_ = 0;
}
inline double PJvmGcDetailed::jvmpoolcodecacheused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmPoolCodeCacheUsed)
  return jvmpoolcodecacheused_;
}
inline void PJvmGcDetailed::set_jvmpoolcodecacheused(double value) {
  
  jvmpoolcodecacheused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmPoolCodeCacheUsed)
}

// double jvmPoolNewGenUsed = 4;
inline void PJvmGcDetailed::clear_jvmpoolnewgenused() {
  jvmpoolnewgenused_ = 0;
}
inline double PJvmGcDetailed::jvmpoolnewgenused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmPoolNewGenUsed)
  return jvmpoolnewgenused_;
}
inline void PJvmGcDetailed::set_jvmpoolnewgenused(double value) {
  
  jvmpoolnewgenused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmPoolNewGenUsed)
}

// double jvmPoolOldGenUsed = 5;
inline void PJvmGcDetailed::clear_jvmpoololdgenused() {
  jvmpoololdgenused_ = 0;
}
inline double PJvmGcDetailed::jvmpoololdgenused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmPoolOldGenUsed)
  return jvmpoololdgenused_;
}
inline void PJvmGcDetailed::set_jvmpoololdgenused(double value) {
  
  jvmpoololdgenused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmPoolOldGenUsed)
}

// double jvmPoolSurvivorSpaceUsed = 6;
inline void PJvmGcDetailed::clear_jvmpoolsurvivorspaceused() {
  jvmpoolsurvivorspaceused_ = 0;
}
inline double PJvmGcDetailed::jvmpoolsurvivorspaceused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmPoolSurvivorSpaceUsed)
  return jvmpoolsurvivorspaceused_;
}
inline void PJvmGcDetailed::set_jvmpoolsurvivorspaceused(double value) {
  
  jvmpoolsurvivorspaceused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmPoolSurvivorSpaceUsed)
}

// double jvmPoolPermGenUsed = 7;
inline void PJvmGcDetailed::clear_jvmpoolpermgenused() {
  jvmpoolpermgenused_ = 0;
}
inline double PJvmGcDetailed::jvmpoolpermgenused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmPoolPermGenUsed)
  return jvmpoolpermgenused_;
}
inline void PJvmGcDetailed::set_jvmpoolpermgenused(double value) {
  
  jvmpoolpermgenused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmPoolPermGenUsed)
}

// double jvmPoolMetaspaceUsed = 8;
inline void PJvmGcDetailed::clear_jvmpoolmetaspaceused() {
  jvmpoolmetaspaceused_ = 0;
}
inline double PJvmGcDetailed::jvmpoolmetaspaceused() const {
  // @@protoc_insertion_point(field_get:v1.PJvmGcDetailed.jvmPoolMetaspaceUsed)
  return jvmpoolmetaspaceused_;
}
inline void PJvmGcDetailed::set_jvmpoolmetaspaceused(double value) {
  
  jvmpoolmetaspaceused_ = value;
  // @@protoc_insertion_point(field_set:v1.PJvmGcDetailed.jvmPoolMetaspaceUsed)
}

// -------------------------------------------------------------------

// PCpuLoad

// double jvmCpuLoad = 1;
inline void PCpuLoad::clear_jvmcpuload() {
  jvmcpuload_ = 0;
}
inline double PCpuLoad::jvmcpuload() const {
  // @@protoc_insertion_point(field_get:v1.PCpuLoad.jvmCpuLoad)
  return jvmcpuload_;
}
inline void PCpuLoad::set_jvmcpuload(double value) {
  
  jvmcpuload_ = value;
  // @@protoc_insertion_point(field_set:v1.PCpuLoad.jvmCpuLoad)
}

// double systemCpuLoad = 2;
inline void PCpuLoad::clear_systemcpuload() {
  systemcpuload_ = 0;
}
inline double PCpuLoad::systemcpuload() const {
  // @@protoc_insertion_point(field_get:v1.PCpuLoad.systemCpuLoad)
  return systemcpuload_;
}
inline void PCpuLoad::set_systemcpuload(double value) {
  
  systemcpuload_ = value;
  // @@protoc_insertion_point(field_set:v1.PCpuLoad.systemCpuLoad)
}

// -------------------------------------------------------------------

// PTransaction

// int64 sampledNewCount = 2;
inline void PTransaction::clear_samplednewcount() {
  samplednewcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PTransaction::samplednewcount() const {
  // @@protoc_insertion_point(field_get:v1.PTransaction.sampledNewCount)
  return samplednewcount_;
}
inline void PTransaction::set_samplednewcount(::google::protobuf::int64 value) {
  
  samplednewcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PTransaction.sampledNewCount)
}

// int64 sampledContinuationCount = 3;
inline void PTransaction::clear_sampledcontinuationcount() {
  sampledcontinuationcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PTransaction::sampledcontinuationcount() const {
  // @@protoc_insertion_point(field_get:v1.PTransaction.sampledContinuationCount)
  return sampledcontinuationcount_;
}
inline void PTransaction::set_sampledcontinuationcount(::google::protobuf::int64 value) {
  
  sampledcontinuationcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PTransaction.sampledContinuationCount)
}

// int64 unsampledNewCount = 4;
inline void PTransaction::clear_unsamplednewcount() {
  unsamplednewcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PTransaction::unsamplednewcount() const {
  // @@protoc_insertion_point(field_get:v1.PTransaction.unsampledNewCount)
  return unsamplednewcount_;
}
inline void PTransaction::set_unsamplednewcount(::google::protobuf::int64 value) {
  
  unsamplednewcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PTransaction.unsampledNewCount)
}

// int64 unsampledContinuationCount = 5;
inline void PTransaction::clear_unsampledcontinuationcount() {
  unsampledcontinuationcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PTransaction::unsampledcontinuationcount() const {
  // @@protoc_insertion_point(field_get:v1.PTransaction.unsampledContinuationCount)
  return unsampledcontinuationcount_;
}
inline void PTransaction::set_unsampledcontinuationcount(::google::protobuf::int64 value) {
  
  unsampledcontinuationcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PTransaction.unsampledContinuationCount)
}

// int64 skippedNewCount = 6;
inline void PTransaction::clear_skippednewcount() {
  skippednewcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PTransaction::skippednewcount() const {
  // @@protoc_insertion_point(field_get:v1.PTransaction.skippedNewCount)
  return skippednewcount_;
}
inline void PTransaction::set_skippednewcount(::google::protobuf::int64 value) {
  
  skippednewcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PTransaction.skippedNewCount)
}

// int64 skippedContinuationCount = 7;
inline void PTransaction::clear_skippedcontinuationcount() {
  skippedcontinuationcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PTransaction::skippedcontinuationcount() const {
  // @@protoc_insertion_point(field_get:v1.PTransaction.skippedContinuationCount)
  return skippedcontinuationcount_;
}
inline void PTransaction::set_skippedcontinuationcount(::google::protobuf::int64 value) {
  
  skippedcontinuationcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PTransaction.skippedContinuationCount)
}

// -------------------------------------------------------------------

// PActiveTraceHistogram

// int32 version = 1;
inline void PActiveTraceHistogram::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 PActiveTraceHistogram::version() const {
  // @@protoc_insertion_point(field_get:v1.PActiveTraceHistogram.version)
  return version_;
}
inline void PActiveTraceHistogram::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:v1.PActiveTraceHistogram.version)
}

// int32 histogramSchemaType = 2;
inline void PActiveTraceHistogram::clear_histogramschematype() {
  histogramschematype_ = 0;
}
inline ::google::protobuf::int32 PActiveTraceHistogram::histogramschematype() const {
  // @@protoc_insertion_point(field_get:v1.PActiveTraceHistogram.histogramSchemaType)
  return histogramschematype_;
}
inline void PActiveTraceHistogram::set_histogramschematype(::google::protobuf::int32 value) {
  
  histogramschematype_ = value;
  // @@protoc_insertion_point(field_set:v1.PActiveTraceHistogram.histogramSchemaType)
}

// repeated int32 activeTraceCount = 3;
inline int PActiveTraceHistogram::activetracecount_size() const {
  return activetracecount_.size();
}
inline void PActiveTraceHistogram::clear_activetracecount() {
  activetracecount_.Clear();
}
inline ::google::protobuf::int32 PActiveTraceHistogram::activetracecount(int index) const {
  // @@protoc_insertion_point(field_get:v1.PActiveTraceHistogram.activeTraceCount)
  return activetracecount_.Get(index);
}
inline void PActiveTraceHistogram::set_activetracecount(int index, ::google::protobuf::int32 value) {
  activetracecount_.Set(index, value);
  // @@protoc_insertion_point(field_set:v1.PActiveTraceHistogram.activeTraceCount)
}
inline void PActiveTraceHistogram::add_activetracecount(::google::protobuf::int32 value) {
  activetracecount_.Add(value);
  // @@protoc_insertion_point(field_add:v1.PActiveTraceHistogram.activeTraceCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PActiveTraceHistogram::activetracecount() const {
  // @@protoc_insertion_point(field_list:v1.PActiveTraceHistogram.activeTraceCount)
  return activetracecount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PActiveTraceHistogram::mutable_activetracecount() {
  // @@protoc_insertion_point(field_mutable_list:v1.PActiveTraceHistogram.activeTraceCount)
  return &activetracecount_;
}

// -------------------------------------------------------------------

// PActiveTrace

// .v1.PActiveTraceHistogram histogram = 1;
inline bool PActiveTrace::has_histogram() const {
  return this != internal_default_instance() && histogram_ != nullptr;
}
inline void PActiveTrace::clear_histogram() {
  if (GetArenaNoVirtual() == nullptr && histogram_ != nullptr) {
    delete histogram_;
  }
  histogram_ = nullptr;
}
inline const ::v1::PActiveTraceHistogram& PActiveTrace::histogram() const {
  const ::v1::PActiveTraceHistogram* p = histogram_;
  // @@protoc_insertion_point(field_get:v1.PActiveTrace.histogram)
  return p != nullptr ? *p : *reinterpret_cast<const ::v1::PActiveTraceHistogram*>(
      &::v1::_PActiveTraceHistogram_default_instance_);
}
inline ::v1::PActiveTraceHistogram* PActiveTrace::release_histogram() {
  // @@protoc_insertion_point(field_release:v1.PActiveTrace.histogram)
  
  ::v1::PActiveTraceHistogram* temp = histogram_;
  histogram_ = nullptr;
  return temp;
}
inline ::v1::PActiveTraceHistogram* PActiveTrace::mutable_histogram() {
  
  if (histogram_ == nullptr) {
    auto* p = CreateMaybeMessage<::v1::PActiveTraceHistogram>(GetArenaNoVirtual());
    histogram_ = p;
  }
  // @@protoc_insertion_point(field_mutable:v1.PActiveTrace.histogram)
  return histogram_;
}
inline void PActiveTrace::set_allocated_histogram(::v1::PActiveTraceHistogram* histogram) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete histogram_;
  }
  if (histogram) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      histogram = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, histogram, submessage_arena);
    }
    
  } else {
    
  }
  histogram_ = histogram;
  // @@protoc_insertion_point(field_set_allocated:v1.PActiveTrace.histogram)
}

// -------------------------------------------------------------------

// PResponseTime

// int64 avg = 1;
inline void PResponseTime::clear_avg() {
  avg_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PResponseTime::avg() const {
  // @@protoc_insertion_point(field_get:v1.PResponseTime.avg)
  return avg_;
}
inline void PResponseTime::set_avg(::google::protobuf::int64 value) {
  
  avg_ = value;
  // @@protoc_insertion_point(field_set:v1.PResponseTime.avg)
}

// int64 max = 2;
inline void PResponseTime::clear_max() {
  max_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PResponseTime::max() const {
  // @@protoc_insertion_point(field_get:v1.PResponseTime.max)
  return max_;
}
inline void PResponseTime::set_max(::google::protobuf::int64 value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:v1.PResponseTime.max)
}

// -------------------------------------------------------------------

// PDeadlock

// int32 count = 1;
inline void PDeadlock::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 PDeadlock::count() const {
  // @@protoc_insertion_point(field_get:v1.PDeadlock.count)
  return count_;
}
inline void PDeadlock::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:v1.PDeadlock.count)
}

// repeated .v1.PThreadDump threadDump = 2;
inline int PDeadlock::threaddump_size() const {
  return threaddump_.size();
}
inline ::v1::PThreadDump* PDeadlock::mutable_threaddump(int index) {
  // @@protoc_insertion_point(field_mutable:v1.PDeadlock.threadDump)
  return threaddump_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::v1::PThreadDump >*
PDeadlock::mutable_threaddump() {
  // @@protoc_insertion_point(field_mutable_list:v1.PDeadlock.threadDump)
  return &threaddump_;
}
inline const ::v1::PThreadDump& PDeadlock::threaddump(int index) const {
  // @@protoc_insertion_point(field_get:v1.PDeadlock.threadDump)
  return threaddump_.Get(index);
}
inline ::v1::PThreadDump* PDeadlock::add_threaddump() {
  // @@protoc_insertion_point(field_add:v1.PDeadlock.threadDump)
  return threaddump_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::v1::PThreadDump >&
PDeadlock::threaddump() const {
  // @@protoc_insertion_point(field_list:v1.PDeadlock.threadDump)
  return threaddump_;
}

// -------------------------------------------------------------------

// PDirectBuffer

// int64 directCount = 1;
inline void PDirectBuffer::clear_directcount() {
  directcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PDirectBuffer::directcount() const {
  // @@protoc_insertion_point(field_get:v1.PDirectBuffer.directCount)
  return directcount_;
}
inline void PDirectBuffer::set_directcount(::google::protobuf::int64 value) {
  
  directcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PDirectBuffer.directCount)
}

// int64 directMemoryUsed = 2;
inline void PDirectBuffer::clear_directmemoryused() {
  directmemoryused_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PDirectBuffer::directmemoryused() const {
  // @@protoc_insertion_point(field_get:v1.PDirectBuffer.directMemoryUsed)
  return directmemoryused_;
}
inline void PDirectBuffer::set_directmemoryused(::google::protobuf::int64 value) {
  
  directmemoryused_ = value;
  // @@protoc_insertion_point(field_set:v1.PDirectBuffer.directMemoryUsed)
}

// int64 mappedCount = 3;
inline void PDirectBuffer::clear_mappedcount() {
  mappedcount_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PDirectBuffer::mappedcount() const {
  // @@protoc_insertion_point(field_get:v1.PDirectBuffer.mappedCount)
  return mappedcount_;
}
inline void PDirectBuffer::set_mappedcount(::google::protobuf::int64 value) {
  
  mappedcount_ = value;
  // @@protoc_insertion_point(field_set:v1.PDirectBuffer.mappedCount)
}

// int64 mappedMemoryUsed = 4;
inline void PDirectBuffer::clear_mappedmemoryused() {
  mappedmemoryused_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PDirectBuffer::mappedmemoryused() const {
  // @@protoc_insertion_point(field_get:v1.PDirectBuffer.mappedMemoryUsed)
  return mappedmemoryused_;
}
inline void PDirectBuffer::set_mappedmemoryused(::google::protobuf::int64 value) {
  
  mappedmemoryused_ = value;
  // @@protoc_insertion_point(field_set:v1.PDirectBuffer.mappedMemoryUsed)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::v1::PJvmGcType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::v1::PJvmGcType>() {
  return ::v1::PJvmGcType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Stat_2eproto
